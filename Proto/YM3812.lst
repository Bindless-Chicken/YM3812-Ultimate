;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 2/14/2018 4:39:03 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2B2D      	GOTO       813
_YM3812_WriteData:
;lib_ym3812.c,34 :: 		void YM3812_WriteData(const uint8_t dt) {
;lib_ym3812.c,36 :: 		CONTROL_PORT = MASK_RESET | MASK_CS | MASK_RD| MASK_A0;
0x0003	0x301D      	MOVLW      29
0x0004	0x1283      	BCF        STATUS, 5
0x0005	0x1303      	BCF        STATUS, 6
0x0006	0x0087      	MOVWF      PORTC
;lib_ym3812.c,39 :: 		DATA_PORT = dt;
0x0007	0x084E      	MOVF       FARG_YM3812_WriteData_dt, 0
0x0008	0x0086      	MOVWF      PORTB
;lib_ym3812.c,42 :: 		CONTROL_PORT = MASK_RESET | MASK_RD | MASK_A0;
0x0009	0x3015      	MOVLW      21
0x000A	0x0087      	MOVWF      PORTC
;lib_ym3812.c,43 :: 		asm {nop};
0x000B	0x0000      	NOP
;lib_ym3812.c,44 :: 		CONTROL_PORT = MASK_RESET | MASK_CS | MASK_RD | MASK_A0;
0x000C	0x301D      	MOVLW      29
0x000D	0x0087      	MOVWF      PORTC
;lib_ym3812.c,45 :: 		}
L_end_YM3812_WriteData:
0x000E	0x0008      	RETURN
; end of _YM3812_WriteData
_YM3812_WriteAddess:
;lib_ym3812.c,21 :: 		void YM3812_WriteAddess(const uint8_t addr) {
;lib_ym3812.c,23 :: 		CONTROL_PORT = MASK_RESET | MASK_CS | MASK_RD;
0x000F	0x301C      	MOVLW      28
0x0010	0x1283      	BCF        STATUS, 5
0x0011	0x1303      	BCF        STATUS, 6
0x0012	0x0087      	MOVWF      PORTC
;lib_ym3812.c,26 :: 		DATA_PORT = addr;
0x0013	0x084E      	MOVF       FARG_YM3812_WriteAddess_addr, 0
0x0014	0x0086      	MOVWF      PORTB
;lib_ym3812.c,29 :: 		CONTROL_PORT = MASK_RESET | MASK_RD;
0x0015	0x3014      	MOVLW      20
0x0016	0x0087      	MOVWF      PORTC
;lib_ym3812.c,30 :: 		asm {nop};
0x0017	0x0000      	NOP
;lib_ym3812.c,31 :: 		CONTROL_PORT = MASK_RESET | MASK_CS | MASK_RD;
0x0018	0x301C      	MOVLW      28
0x0019	0x0087      	MOVWF      PORTC
;lib_ym3812.c,32 :: 		}
L_end_YM3812_WriteAddess:
0x001A	0x0008      	RETURN
; end of _YM3812_WriteAddess
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x001B	0x1283      	BCF        STATUS, 5
0x001C	0x1303      	BCF        STATUS, 6
0x001D	0x0821      	MOVF       ___DoICPAddr+1, 0
0x001E	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x001F	0x0820      	MOVF       ___DoICPAddr, 0
0x0020	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0021	0x0008      	RETURN
; end of _____DoICP
_YM3812_SetRegister:
;lib_ym3812.c,51 :: 		) {
;lib_ym3812.c,52 :: 		YM3812_WriteAddess(reg + YM3812_channelOffset[ch]);
0x0022	0x1283      	BCF        STATUS, 5
0x0023	0x1303      	BCF        STATUS, 6
0x0024	0x084B      	MOVF       FARG_YM3812_SetRegister_ch, 0
0x0025	0x3E80      	ADDLW      _YM3812_channelOffset
0x0026	0x00F0      	MOVWF      R0
0x0027	0x3005      	MOVLW      hi_addr(_YM3812_channelOffset)
0x0028	0x1803      	BTFSC      STATUS, 0
0x0029	0x3E01      	ADDLW      1
0x002A	0x00F1      	MOVWF      R0+1
0x002B	0x0870      	MOVF       R0, 0
0x002C	0x00A0      	MOVWF      ___DoICPAddr
0x002D	0x0871      	MOVF       R0+1, 0
0x002E	0x00A1      	MOVWF      ___DoICPAddr+1
0x002F	0x201B      	CALL       _____DoICP
0x0030	0x118A      	BCF        PCLATH, 3
0x0031	0x120A      	BCF        PCLATH, 4
0x0032	0x00F0      	MOVWF      R0
0x0033	0x0870      	MOVF       R0, 0
0x0034	0x0749      	ADDWF      FARG_YM3812_SetRegister_reg, 0
0x0035	0x00CE      	MOVWF      FARG_YM3812_WriteAddess_addr
0x0036	0x200F      	CALL       _YM3812_WriteAddess
;lib_ym3812.c,53 :: 		YM3812_WriteData(dt);
0x0037	0x084A      	MOVF       FARG_YM3812_SetRegister_dt, 0
0x0038	0x00CE      	MOVWF      FARG_YM3812_WriteData_dt
0x0039	0x2003      	CALL       _YM3812_WriteData
;lib_ym3812.c,54 :: 		}
L_end_YM3812_SetRegister:
0x003A	0x0008      	RETURN
; end of _YM3812_SetRegister
_YM3812_SetOperatorRegister:
;lib_ym3812.c,62 :: 		) {
;lib_ym3812.c,63 :: 		YM3812_WriteAddess(reg + YM3812_channelOffset[ch] + (op ? 3 : 0));
0x003B	0x1283      	BCF        STATUS, 5
0x003C	0x1303      	BCF        STATUS, 6
0x003D	0x084B      	MOVF       FARG_YM3812_SetOperatorRegister_ch, 0
0x003E	0x3E80      	ADDLW      _YM3812_channelOffset
0x003F	0x00F0      	MOVWF      R0
0x0040	0x3005      	MOVLW      hi_addr(_YM3812_channelOffset)
0x0041	0x1803      	BTFSC      STATUS, 0
0x0042	0x3E01      	ADDLW      1
0x0043	0x00F1      	MOVWF      R0+1
0x0044	0x0870      	MOVF       R0, 0
0x0045	0x00A0      	MOVWF      ___DoICPAddr
0x0046	0x0871      	MOVF       R0+1, 0
0x0047	0x00A1      	MOVWF      ___DoICPAddr+1
0x0048	0x201B      	CALL       _____DoICP
0x0049	0x118A      	BCF        PCLATH, 3
0x004A	0x120A      	BCF        PCLATH, 4
0x004B	0x00F0      	MOVWF      R0
0x004C	0x0870      	MOVF       R0, 0
0x004D	0x0749      	ADDWF      FARG_YM3812_SetOperatorRegister_reg, 0
0x004E	0x00CE      	MOVWF      FARG_YM3812_WriteAddess_addr
0x004F	0x084C      	MOVF       FARG_YM3812_SetOperatorRegister_op, 0
0x0050	0x1903      	BTFSC      STATUS, 2
0x0051	0x2855      	GOTO       L_YM3812_SetOperatorRegister1
0x0052	0x3003      	MOVLW      3
0x0053	0x00CD      	MOVWF      ?FLOC___YM3812_SetOperatorRegisterT10
0x0054	0x2856      	GOTO       L_YM3812_SetOperatorRegister2
L_YM3812_SetOperatorRegister1:
0x0055	0x01CD      	CLRF       ?FLOC___YM3812_SetOperatorRegisterT10
L_YM3812_SetOperatorRegister2:
0x0056	0x084D      	MOVF       ?FLOC___YM3812_SetOperatorRegisterT10, 0
0x0057	0x07CE      	ADDWF      FARG_YM3812_WriteAddess_addr, 1
0x0058	0x200F      	CALL       _YM3812_WriteAddess
;lib_ym3812.c,64 :: 		YM3812_WriteData(dt);
0x0059	0x084A      	MOVF       FARG_YM3812_SetOperatorRegister_dt, 0
0x005A	0x00CE      	MOVWF      FARG_YM3812_WriteData_dt
0x005B	0x2003      	CALL       _YM3812_WriteData
;lib_ym3812.c,65 :: 		}
L_end_YM3812_SetOperatorRegister:
0x005C	0x0008      	RETURN
; end of _YM3812_SetOperatorRegister
_Init:
;lib_channel.c,4 :: 		void Init(struct YM3812_Channel *channel) {
;lib_channel.c,5 :: 		channel->ChannelNumber = 0x00;
0x005D	0x1283      	BCF        STATUS, 5
0x005E	0x1303      	BCF        STATUS, 6
0x005F	0x0846      	MOVF       FARG_Init_channel, 0
0x0060	0x0084      	MOVWF      FSR
0x0061	0x0180      	CLRF       INDF
;lib_channel.c,6 :: 		channel->reg_20[0] = 0x00;
0x0062	0x0A46      	INCF       FARG_Init_channel, 0
0x0063	0x0084      	MOVWF      FSR
0x0064	0x0180      	CLRF       INDF
;lib_channel.c,7 :: 		channel->reg_20[1] = 0x00;
0x0065	0x0A46      	INCF       FARG_Init_channel, 0
0x0066	0x00F0      	MOVWF      R0
0x0067	0x0A70      	INCF       R0, 0
0x0068	0x0084      	MOVWF      FSR
0x0069	0x0180      	CLRF       INDF
;lib_channel.c,8 :: 		channel->reg_40[0] = 0x00;
0x006A	0x3003      	MOVLW      3
0x006B	0x0746      	ADDWF      FARG_Init_channel, 0
0x006C	0x0084      	MOVWF      FSR
0x006D	0x0180      	CLRF       INDF
;lib_channel.c,9 :: 		channel->reg_40[1] = 0x00;
0x006E	0x3003      	MOVLW      3
0x006F	0x0746      	ADDWF      FARG_Init_channel, 0
0x0070	0x00F0      	MOVWF      R0
0x0071	0x0A70      	INCF       R0, 0
0x0072	0x0084      	MOVWF      FSR
0x0073	0x0180      	CLRF       INDF
;lib_channel.c,10 :: 		channel->reg_60[0] = 0x00;
0x0074	0x3005      	MOVLW      5
0x0075	0x0746      	ADDWF      FARG_Init_channel, 0
0x0076	0x0084      	MOVWF      FSR
0x0077	0x0180      	CLRF       INDF
;lib_channel.c,11 :: 		channel->reg_60[1] = 0x00;
0x0078	0x3005      	MOVLW      5
0x0079	0x0746      	ADDWF      FARG_Init_channel, 0
0x007A	0x00F0      	MOVWF      R0
0x007B	0x0A70      	INCF       R0, 0
0x007C	0x0084      	MOVWF      FSR
0x007D	0x0180      	CLRF       INDF
;lib_channel.c,12 :: 		channel->reg_80[0] = 0x00;
0x007E	0x3007      	MOVLW      7
0x007F	0x0746      	ADDWF      FARG_Init_channel, 0
0x0080	0x0084      	MOVWF      FSR
0x0081	0x0180      	CLRF       INDF
;lib_channel.c,13 :: 		channel->reg_80[1] = 0x00;
0x0082	0x3007      	MOVLW      7
0x0083	0x0746      	ADDWF      FARG_Init_channel, 0
0x0084	0x00F0      	MOVWF      R0
0x0085	0x0A70      	INCF       R0, 0
0x0086	0x0084      	MOVWF      FSR
0x0087	0x0180      	CLRF       INDF
;lib_channel.c,14 :: 		channel->reg_B0 = 0x00;
0x0088	0x3009      	MOVLW      9
0x0089	0x0746      	ADDWF      FARG_Init_channel, 0
0x008A	0x0084      	MOVWF      FSR
0x008B	0x0180      	CLRF       INDF
;lib_channel.c,15 :: 		channel->reg_C0 = 0x00;
0x008C	0x300A      	MOVLW      10
0x008D	0x0746      	ADDWF      FARG_Init_channel, 0
0x008E	0x0084      	MOVWF      FSR
0x008F	0x0180      	CLRF       INDF
;lib_channel.c,16 :: 		}
L_end_Init:
0x0090	0x0008      	RETURN
; end of _Init
_SetVolume:
;lib_channel.c,142 :: 		) {
;lib_channel.c,144 :: 		channel->reg_40[o] = (channel->reg_40[o] & 0xC0) | d;
0x0091	0x3003      	MOVLW      3
0x0092	0x1283      	BCF        STATUS, 5
0x0093	0x1303      	BCF        STATUS, 6
0x0094	0x0746      	ADDWF      FARG_SetVolume_channel, 0
0x0095	0x00F0      	MOVWF      R0
0x0096	0x0847      	MOVF       FARG_SetVolume_o, 0
0x0097	0x0770      	ADDWF      R0, 0
0x0098	0x00F1      	MOVWF      R1
0x0099	0x0871      	MOVF       R1, 0
0x009A	0x0084      	MOVWF      FSR
0x009B	0x30C0      	MOVLW      192
0x009C	0x0500      	ANDWF      INDF, 0
0x009D	0x00F0      	MOVWF      R0
0x009E	0x0848      	MOVF       FARG_SetVolume_d, 0
0x009F	0x04F0      	IORWF      R0, 1
0x00A0	0x0871      	MOVF       R1, 0
0x00A1	0x0084      	MOVWF      FSR
0x00A2	0x0870      	MOVF       R0, 0
0x00A3	0x0080      	MOVWF      INDF
;lib_channel.c,146 :: 		YM3812_SetOperatorRegister(0x40, channel->reg_40[o], channel->ChannelNumber, o);
0x00A4	0x3040      	MOVLW      64
0x00A5	0x00C9      	MOVWF      FARG_YM3812_SetOperatorRegister_reg
0x00A6	0x3003      	MOVLW      3
0x00A7	0x0746      	ADDWF      FARG_SetVolume_channel, 0
0x00A8	0x00F0      	MOVWF      R0
0x00A9	0x0847      	MOVF       FARG_SetVolume_o, 0
0x00AA	0x0770      	ADDWF      R0, 0
0x00AB	0x0084      	MOVWF      FSR
0x00AC	0x0800      	MOVF       INDF, 0
0x00AD	0x00CA      	MOVWF      FARG_YM3812_SetOperatorRegister_dt
0x00AE	0x0846      	MOVF       FARG_SetVolume_channel, 0
0x00AF	0x0084      	MOVWF      FSR
0x00B0	0x0800      	MOVF       INDF, 0
0x00B1	0x00CB      	MOVWF      FARG_YM3812_SetOperatorRegister_ch
0x00B2	0x0847      	MOVF       FARG_SetVolume_o, 0
0x00B3	0x00CC      	MOVWF      FARG_YM3812_SetOperatorRegister_op
0x00B4	0x203B      	CALL       _YM3812_SetOperatorRegister
;lib_channel.c,147 :: 		}
L_end_SetVolume:
0x00B5	0x0008      	RETURN
; end of _SetVolume
_Mul_16X16_U:
;__Lib_Math.c,136 :: 		
;__Lib_Math.c,143 :: 		
0x00B6	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,144 :: 		
0x00B7	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,145 :: 		
0x00B8	0x01FB      	CLRF       R11
;__Lib_Math.c,146 :: 		
0x00B9	0x01FA      	CLRF       R10
;__Lib_Math.c,147 :: 		
0x00BA	0x01F9      	CLRF       R9
;__Lib_Math.c,148 :: 		
0x00BB	0x3080      	MOVLW      128
;__Lib_Math.c,149 :: 		
0x00BC	0x00F8      	MOVWF      R8
;__Lib_Math.c,150 :: 		
0x00BD	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,151 :: 		
0x00BE	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,152 :: 		
0x00BF	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,153 :: 		
0x00C0	0x28CA      	GOTO       $+10
;__Lib_Math.c,154 :: 		
0x00C1	0x0874      	MOVF       R4, 0
;__Lib_Math.c,155 :: 		
0x00C2	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,156 :: 		
0x00C3	0x0875      	MOVF       R5, 0
;__Lib_Math.c,157 :: 		
0x00C4	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,158 :: 		
0x00C5	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,159 :: 		
0x00C6	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,160 :: 		
0x00C7	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,161 :: 		
0x00C8	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,162 :: 		
0x00C9	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,163 :: 		
0x00CA	0x1FF0      	BTFSS      R0, 7
;__Lib_Math.c,164 :: 		
0x00CB	0x28D2      	GOTO       $+7
;__Lib_Math.c,165 :: 		
0x00CC	0x0874      	MOVF       R4, 0
;__Lib_Math.c,166 :: 		
0x00CD	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,167 :: 		
0x00CE	0x0875      	MOVF       R5, 0
;__Lib_Math.c,168 :: 		
0x00CF	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,169 :: 		
0x00D0	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,170 :: 		
0x00D1	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,171 :: 		
0x00D2	0x0CFB      	RRF        R11, 1
;__Lib_Math.c,172 :: 		
0x00D3	0x0CFA      	RRF        R10, 1
;__Lib_Math.c,173 :: 		
0x00D4	0x0CF9      	RRF        R9, 1
;__Lib_Math.c,174 :: 		
0x00D5	0x0CF8      	RRF        R8, 1
;__Lib_Math.c,175 :: 		
0x00D6	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,176 :: 		
0x00D7	0x28BD      	GOTO       $-26
;__Lib_Math.c,177 :: 		
0x00D8	0x087B      	MOVF       R11, 0
;__Lib_Math.c,178 :: 		
0x00D9	0x00F3      	MOVWF      R3
;__Lib_Math.c,179 :: 		
0x00DA	0x087A      	MOVF       R10, 0
;__Lib_Math.c,180 :: 		
0x00DB	0x00F2      	MOVWF      R2
;__Lib_Math.c,181 :: 		
0x00DC	0x0879      	MOVF       R9, 0
;__Lib_Math.c,182 :: 		
0x00DD	0x00F1      	MOVWF      R1
;__Lib_Math.c,183 :: 		
0x00DE	0x0878      	MOVF       R8, 0
;__Lib_Math.c,184 :: 		
0x00DF	0x00F0      	MOVWF      R0
;__Lib_Math.c,187 :: 		
L_end_Mul_16X16_U:
0x00E0	0x0008      	RETURN
; end of _Mul_16X16_U
_Mul_8X8_U:
;__Lib_Math.c,103 :: 		
;__Lib_Math.c,108 :: 		
0x00E1	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,109 :: 		
0x00E2	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,110 :: 		
0x00E3	0x0870      	MOVF       R0, 0
;__Lib_Math.c,111 :: 		
0x00E4	0x00F1      	MOVWF      R1
;__Lib_Math.c,112 :: 		
0x00E5	0x01F0      	CLRF       R0
;__Lib_Math.c,113 :: 		
0x00E6	0x3008      	MOVLW      8
;__Lib_Math.c,114 :: 		
0x00E7	0x00FC      	MOVWF      R12
;__Lib_Math.c,115 :: 		
0x00E8	0x0871      	MOVF       R1, 0
;__Lib_Math.c,116 :: 		
0x00E9	0x0CF4      	RRF        R4, 1
;__Lib_Math.c,117 :: 		
0x00EA	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,118 :: 		
0x00EB	0x28F0      	GOTO       $+5
;__Lib_Math.c,119 :: 		
0x00EC	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,120 :: 		
0x00ED	0x28E9      	GOTO       $-4
;__Lib_Math.c,121 :: 		
0x00EE	0x01F1      	CLRF       R1
;__Lib_Math.c,122 :: 		
0x00EF	0x3400      	RETLW      0
;__Lib_Math.c,123 :: 		
0x00F0	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,124 :: 		
0x00F1	0x28F5      	GOTO       $+4
;__Lib_Math.c,125 :: 		
0x00F2	0x0CF4      	RRF        R4, 1
;__Lib_Math.c,126 :: 		
0x00F3	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,127 :: 		
0x00F4	0x07F1      	ADDWF      R1, 1
;__Lib_Math.c,128 :: 		
0x00F5	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,129 :: 		
0x00F6	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,130 :: 		
0x00F7	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,131 :: 		
0x00F8	0x28F2      	GOTO       $-6
;__Lib_Math.c,133 :: 		
;__Lib_Math.c,134 :: 		
L_end_Mul_8X8_U:
0x00F9	0x0008      	RETURN
; end of _Mul_8X8_U
_SetRelease:
;lib_channel.c,88 :: 		) {
;lib_channel.c,90 :: 		channel->reg_80[o] = (channel->reg_80[o] & 0xF0) | d;
0x00FA	0x3007      	MOVLW      7
0x00FB	0x1283      	BCF        STATUS, 5
0x00FC	0x1303      	BCF        STATUS, 6
0x00FD	0x0746      	ADDWF      FARG_SetRelease_channel, 0
0x00FE	0x00F0      	MOVWF      R0
0x00FF	0x0847      	MOVF       FARG_SetRelease_o, 0
0x0100	0x0770      	ADDWF      R0, 0
0x0101	0x00F1      	MOVWF      R1
0x0102	0x0871      	MOVF       R1, 0
0x0103	0x0084      	MOVWF      FSR
0x0104	0x30F0      	MOVLW      240
0x0105	0x0500      	ANDWF      INDF, 0
0x0106	0x00F0      	MOVWF      R0
0x0107	0x0848      	MOVF       FARG_SetRelease_d, 0
0x0108	0x04F0      	IORWF      R0, 1
0x0109	0x0871      	MOVF       R1, 0
0x010A	0x0084      	MOVWF      FSR
0x010B	0x0870      	MOVF       R0, 0
0x010C	0x0080      	MOVWF      INDF
;lib_channel.c,92 :: 		YM3812_SetOperatorRegister(0x80, channel->reg_80[o], channel->ChannelNumber, o);
0x010D	0x3080      	MOVLW      128
0x010E	0x00C9      	MOVWF      FARG_YM3812_SetOperatorRegister_reg
0x010F	0x3007      	MOVLW      7
0x0110	0x0746      	ADDWF      FARG_SetRelease_channel, 0
0x0111	0x00F0      	MOVWF      R0
0x0112	0x0847      	MOVF       FARG_SetRelease_o, 0
0x0113	0x0770      	ADDWF      R0, 0
0x0114	0x0084      	MOVWF      FSR
0x0115	0x0800      	MOVF       INDF, 0
0x0116	0x00CA      	MOVWF      FARG_YM3812_SetOperatorRegister_dt
0x0117	0x0846      	MOVF       FARG_SetRelease_channel, 0
0x0118	0x0084      	MOVWF      FSR
0x0119	0x0800      	MOVF       INDF, 0
0x011A	0x00CB      	MOVWF      FARG_YM3812_SetOperatorRegister_ch
0x011B	0x0847      	MOVF       FARG_SetRelease_o, 0
0x011C	0x00CC      	MOVWF      FARG_YM3812_SetOperatorRegister_op
0x011D	0x203B      	CALL       _YM3812_SetOperatorRegister
;lib_channel.c,93 :: 		}
L_end_SetRelease:
0x011E	0x0008      	RETURN
; end of _SetRelease
_YM3812_Init:
;lib_ym3812.c,6 :: 		void YM3812_Init() {
;lib_ym3812.c,8 :: 		TRISB = 0x00;
0x011F	0x1683      	BSF        STATUS, 5
0x0120	0x1303      	BCF        STATUS, 6
0x0121	0x0186      	CLRF       TRISB
;lib_ym3812.c,9 :: 		TRISC = 0x00;
0x0122	0x0187      	CLRF       TRISC
;lib_ym3812.c,11 :: 		DATA_PORT = 0x00;
0x0123	0x1283      	BCF        STATUS, 5
0x0124	0x0186      	CLRF       PORTB
;lib_ym3812.c,12 :: 		CONTROL_PORT = MASK_RESET | MASK_CS;
0x0125	0x3018      	MOVLW      24
0x0126	0x0087      	MOVWF      PORTC
;lib_ym3812.c,13 :: 		}
L_end_YM3812_Init:
0x0127	0x0008      	RETURN
; end of _YM3812_Init
_YM3812_Reset:
;lib_ym3812.c,15 :: 		void YM3812_Reset() {
;lib_ym3812.c,16 :: 		CONTROL_PORT = MASK_CS;
0x0128	0x3008      	MOVLW      8
0x0129	0x1283      	BCF        STATUS, 5
0x012A	0x1303      	BCF        STATUS, 6
0x012B	0x0087      	MOVWF      PORTC
;lib_ym3812.c,17 :: 		delay_ms(25);
0x012C	0x3041      	MOVLW      65
0x012D	0x00FC      	MOVWF      R12
0x012E	0x30EE      	MOVLW      238
0x012F	0x00FD      	MOVWF      R13
L_YM3812_Reset0:
0x0130	0x0BFD      	DECFSZ     R13, 1
0x0131	0x2930      	GOTO       L_YM3812_Reset0
0x0132	0x0BFC      	DECFSZ     R12, 1
0x0133	0x2930      	GOTO       L_YM3812_Reset0
0x0134	0x0000      	NOP
;lib_ym3812.c,18 :: 		CONTROL_PORT = MASK_RESET | MASK_CS;
0x0135	0x3018      	MOVLW      24
0x0136	0x0087      	MOVWF      PORTC
;lib_ym3812.c,19 :: 		}
L_end_YM3812_Reset:
0x0137	0x0008      	RETURN
; end of _YM3812_Reset
_SetDecay:
;lib_channel.c,66 :: 		) {
;lib_channel.c,68 :: 		channel->reg_60[o] = (channel->reg_60[o] & 0xF0) | d;
0x0138	0x3005      	MOVLW      5
0x0139	0x1283      	BCF        STATUS, 5
0x013A	0x1303      	BCF        STATUS, 6
0x013B	0x0746      	ADDWF      FARG_SetDecay_channel, 0
0x013C	0x00F0      	MOVWF      R0
0x013D	0x0847      	MOVF       FARG_SetDecay_o, 0
0x013E	0x0770      	ADDWF      R0, 0
0x013F	0x00F1      	MOVWF      R1
0x0140	0x0871      	MOVF       R1, 0
0x0141	0x0084      	MOVWF      FSR
0x0142	0x30F0      	MOVLW      240
0x0143	0x0500      	ANDWF      INDF, 0
0x0144	0x00F0      	MOVWF      R0
0x0145	0x0848      	MOVF       FARG_SetDecay_d, 0
0x0146	0x04F0      	IORWF      R0, 1
0x0147	0x0871      	MOVF       R1, 0
0x0148	0x0084      	MOVWF      FSR
0x0149	0x0870      	MOVF       R0, 0
0x014A	0x0080      	MOVWF      INDF
;lib_channel.c,70 :: 		YM3812_SetOperatorRegister(0x60, channel->reg_60[o], channel->ChannelNumber, o);
0x014B	0x3060      	MOVLW      96
0x014C	0x00C9      	MOVWF      FARG_YM3812_SetOperatorRegister_reg
0x014D	0x3005      	MOVLW      5
0x014E	0x0746      	ADDWF      FARG_SetDecay_channel, 0
0x014F	0x00F0      	MOVWF      R0
0x0150	0x0847      	MOVF       FARG_SetDecay_o, 0
0x0151	0x0770      	ADDWF      R0, 0
0x0152	0x0084      	MOVWF      FSR
0x0153	0x0800      	MOVF       INDF, 0
0x0154	0x00CA      	MOVWF      FARG_YM3812_SetOperatorRegister_dt
0x0155	0x0846      	MOVF       FARG_SetDecay_channel, 0
0x0156	0x0084      	MOVWF      FSR
0x0157	0x0800      	MOVF       INDF, 0
0x0158	0x00CB      	MOVWF      FARG_YM3812_SetOperatorRegister_ch
0x0159	0x0847      	MOVF       FARG_SetDecay_o, 0
0x015A	0x00CC      	MOVWF      FARG_YM3812_SetOperatorRegister_op
0x015B	0x203B      	CALL       _YM3812_SetOperatorRegister
;lib_channel.c,71 :: 		}
L_end_SetDecay:
0x015C	0x0008      	RETURN
; end of _SetDecay
_SetAttack:
;lib_channel.c,77 :: 		) {
;lib_channel.c,79 :: 		channel->reg_60[o] = (channel->reg_60[o] & 0x0F) | (d << 4);
0x015D	0x3005      	MOVLW      5
0x015E	0x1283      	BCF        STATUS, 5
0x015F	0x1303      	BCF        STATUS, 6
0x0160	0x0746      	ADDWF      FARG_SetAttack_channel, 0
0x0161	0x00F0      	MOVWF      R0
0x0162	0x0847      	MOVF       FARG_SetAttack_o, 0
0x0163	0x0770      	ADDWF      R0, 0
0x0164	0x00F3      	MOVWF      R3
0x0165	0x0873      	MOVF       R3, 0
0x0166	0x0084      	MOVWF      FSR
0x0167	0x300F      	MOVLW      15
0x0168	0x0500      	ANDWF      INDF, 0
0x0169	0x00F2      	MOVWF      R2
0x016A	0x0848      	MOVF       FARG_SetAttack_d, 0
0x016B	0x00F0      	MOVWF      R0
0x016C	0x0DF0      	RLF        R0, 1
0x016D	0x1070      	BCF        R0, 0
0x016E	0x0DF0      	RLF        R0, 1
0x016F	0x1070      	BCF        R0, 0
0x0170	0x0DF0      	RLF        R0, 1
0x0171	0x1070      	BCF        R0, 0
0x0172	0x0DF0      	RLF        R0, 1
0x0173	0x1070      	BCF        R0, 0
0x0174	0x0872      	MOVF       R2, 0
0x0175	0x04F0      	IORWF      R0, 1
0x0176	0x0873      	MOVF       R3, 0
0x0177	0x0084      	MOVWF      FSR
0x0178	0x0870      	MOVF       R0, 0
0x0179	0x0080      	MOVWF      INDF
;lib_channel.c,81 :: 		YM3812_SetOperatorRegister(0x60, channel->reg_60[o], channel->ChannelNumber, o);
0x017A	0x3060      	MOVLW      96
0x017B	0x00C9      	MOVWF      FARG_YM3812_SetOperatorRegister_reg
0x017C	0x3005      	MOVLW      5
0x017D	0x0746      	ADDWF      FARG_SetAttack_channel, 0
0x017E	0x00F0      	MOVWF      R0
0x017F	0x0847      	MOVF       FARG_SetAttack_o, 0
0x0180	0x0770      	ADDWF      R0, 0
0x0181	0x0084      	MOVWF      FSR
0x0182	0x0800      	MOVF       INDF, 0
0x0183	0x00CA      	MOVWF      FARG_YM3812_SetOperatorRegister_dt
0x0184	0x0846      	MOVF       FARG_SetAttack_channel, 0
0x0185	0x0084      	MOVWF      FSR
0x0186	0x0800      	MOVF       INDF, 0
0x0187	0x00CB      	MOVWF      FARG_YM3812_SetOperatorRegister_ch
0x0188	0x0847      	MOVF       FARG_SetAttack_o, 0
0x0189	0x00CC      	MOVWF      FARG_YM3812_SetOperatorRegister_op
0x018A	0x203B      	CALL       _YM3812_SetOperatorRegister
;lib_channel.c,82 :: 		}
L_end_SetAttack:
0x018B	0x0008      	RETURN
; end of _SetAttack
_SetFeedback:
;lib_channel.c,152 :: 		) {
;lib_channel.c,154 :: 		channel->reg_C0 = (channel->reg_C0 & 0xC0) | (d << 1);
0x018C	0x300A      	MOVLW      10
0x018D	0x1283      	BCF        STATUS, 5
0x018E	0x1303      	BCF        STATUS, 6
0x018F	0x0746      	ADDWF      FARG_SetFeedback_channel, 0
0x0190	0x00F3      	MOVWF      R3
0x0191	0x0873      	MOVF       R3, 0
0x0192	0x0084      	MOVWF      FSR
0x0193	0x30C0      	MOVLW      192
0x0194	0x0500      	ANDWF      INDF, 0
0x0195	0x00F2      	MOVWF      R2
0x0196	0x0847      	MOVF       FARG_SetFeedback_d, 0
0x0197	0x00F0      	MOVWF      R0
0x0198	0x0DF0      	RLF        R0, 1
0x0199	0x1070      	BCF        R0, 0
0x019A	0x0872      	MOVF       R2, 0
0x019B	0x04F0      	IORWF      R0, 1
0x019C	0x0873      	MOVF       R3, 0
0x019D	0x0084      	MOVWF      FSR
0x019E	0x0870      	MOVF       R0, 0
0x019F	0x0080      	MOVWF      INDF
;lib_channel.c,156 :: 		YM3812_SetRegister(0xC0, channel->reg_C0, channel->ChannelNumber);
0x01A0	0x30C0      	MOVLW      192
0x01A1	0x00C9      	MOVWF      FARG_YM3812_SetRegister_reg
0x01A2	0x300A      	MOVLW      10
0x01A3	0x0746      	ADDWF      FARG_SetFeedback_channel, 0
0x01A4	0x0084      	MOVWF      FSR
0x01A5	0x0800      	MOVF       INDF, 0
0x01A6	0x00CA      	MOVWF      FARG_YM3812_SetRegister_dt
0x01A7	0x0846      	MOVF       FARG_SetFeedback_channel, 0
0x01A8	0x0084      	MOVWF      FSR
0x01A9	0x0800      	MOVF       INDF, 0
0x01AA	0x00CB      	MOVWF      FARG_YM3812_SetRegister_ch
0x01AB	0x2022      	CALL       _YM3812_SetRegister
;lib_channel.c,157 :: 		}
L_end_SetFeedback:
0x01AC	0x0008      	RETURN
; end of _SetFeedback
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x01AD	0x201B      	CALL       _____DoICP
0x01AE	0x118A      	BCF        PCLATH, 3
0x01AF	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x01B0	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x01B1	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x01B2	0x0AA0      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x01B3	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x01B4	0x0AA1      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x01B5	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x01B6	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x01B7	0x29AD      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x01B8	0x0008      	RETURN
; end of ___CC2DW
_SetSustain:
;lib_channel.c,99 :: 		) {
;lib_channel.c,101 :: 		channel->reg_80[o] = (channel->reg_80[o] & 0x0F) | (d << 4);
0x01B9	0x3007      	MOVLW      7
0x01BA	0x1283      	BCF        STATUS, 5
0x01BB	0x1303      	BCF        STATUS, 6
0x01BC	0x0746      	ADDWF      FARG_SetSustain_channel, 0
0x01BD	0x00F0      	MOVWF      R0
0x01BE	0x0847      	MOVF       FARG_SetSustain_o, 0
0x01BF	0x0770      	ADDWF      R0, 0
0x01C0	0x00F3      	MOVWF      R3
0x01C1	0x0873      	MOVF       R3, 0
0x01C2	0x0084      	MOVWF      FSR
0x01C3	0x300F      	MOVLW      15
0x01C4	0x0500      	ANDWF      INDF, 0
0x01C5	0x00F2      	MOVWF      R2
0x01C6	0x0848      	MOVF       FARG_SetSustain_d, 0
0x01C7	0x00F0      	MOVWF      R0
0x01C8	0x0DF0      	RLF        R0, 1
0x01C9	0x1070      	BCF        R0, 0
0x01CA	0x0DF0      	RLF        R0, 1
0x01CB	0x1070      	BCF        R0, 0
0x01CC	0x0DF0      	RLF        R0, 1
0x01CD	0x1070      	BCF        R0, 0
0x01CE	0x0DF0      	RLF        R0, 1
0x01CF	0x1070      	BCF        R0, 0
0x01D0	0x0872      	MOVF       R2, 0
0x01D1	0x04F0      	IORWF      R0, 1
0x01D2	0x0873      	MOVF       R3, 0
0x01D3	0x0084      	MOVWF      FSR
0x01D4	0x0870      	MOVF       R0, 0
0x01D5	0x0080      	MOVWF      INDF
;lib_channel.c,103 :: 		YM3812_SetOperatorRegister(0x80, channel->reg_80[o], channel->ChannelNumber, o);
0x01D6	0x3080      	MOVLW      128
0x01D7	0x00C9      	MOVWF      FARG_YM3812_SetOperatorRegister_reg
0x01D8	0x3007      	MOVLW      7
0x01D9	0x0746      	ADDWF      FARG_SetSustain_channel, 0
0x01DA	0x00F0      	MOVWF      R0
0x01DB	0x0847      	MOVF       FARG_SetSustain_o, 0
0x01DC	0x0770      	ADDWF      R0, 0
0x01DD	0x0084      	MOVWF      FSR
0x01DE	0x0800      	MOVF       INDF, 0
0x01DF	0x00CA      	MOVWF      FARG_YM3812_SetOperatorRegister_dt
0x01E0	0x0846      	MOVF       FARG_SetSustain_channel, 0
0x01E1	0x0084      	MOVWF      FSR
0x01E2	0x0800      	MOVF       INDF, 0
0x01E3	0x00CB      	MOVWF      FARG_YM3812_SetOperatorRegister_ch
0x01E4	0x0847      	MOVF       FARG_SetSustain_o, 0
0x01E5	0x00CC      	MOVWF      FARG_YM3812_SetOperatorRegister_op
0x01E6	0x203B      	CALL       _YM3812_SetOperatorRegister
;lib_channel.c,104 :: 		}
L_end_SetSustain:
0x01E7	0x0008      	RETURN
; end of _SetSustain
_SetBlock:
;lib_channel.c,120 :: 		) {
;lib_channel.c,122 :: 		channel->reg_B0 = (channel->reg_B0 & 0xE3) | (d << 2);
0x01E8	0x3009      	MOVLW      9
0x01E9	0x1283      	BCF        STATUS, 5
0x01EA	0x1303      	BCF        STATUS, 6
0x01EB	0x0746      	ADDWF      FARG_SetBlock_channel, 0
0x01EC	0x00F3      	MOVWF      R3
0x01ED	0x0873      	MOVF       R3, 0
0x01EE	0x0084      	MOVWF      FSR
0x01EF	0x30E3      	MOVLW      227
0x01F0	0x0500      	ANDWF      INDF, 0
0x01F1	0x00F2      	MOVWF      R2
0x01F2	0x0847      	MOVF       FARG_SetBlock_d, 0
0x01F3	0x00F0      	MOVWF      R0
0x01F4	0x0DF0      	RLF        R0, 1
0x01F5	0x1070      	BCF        R0, 0
0x01F6	0x0DF0      	RLF        R0, 1
0x01F7	0x1070      	BCF        R0, 0
0x01F8	0x0872      	MOVF       R2, 0
0x01F9	0x04F0      	IORWF      R0, 1
0x01FA	0x0873      	MOVF       R3, 0
0x01FB	0x0084      	MOVWF      FSR
0x01FC	0x0870      	MOVF       R0, 0
0x01FD	0x0080      	MOVWF      INDF
;lib_channel.c,123 :: 		YM3812_SetRegister(0xB0, channel->reg_B0, channel->ChannelNumber);
0x01FE	0x30B0      	MOVLW      176
0x01FF	0x00C9      	MOVWF      FARG_YM3812_SetRegister_reg
0x0200	0x3009      	MOVLW      9
0x0201	0x0746      	ADDWF      FARG_SetBlock_channel, 0
0x0202	0x0084      	MOVWF      FSR
0x0203	0x0800      	MOVF       INDF, 0
0x0204	0x00CA      	MOVWF      FARG_YM3812_SetRegister_dt
0x0205	0x0846      	MOVF       FARG_SetBlock_channel, 0
0x0206	0x0084      	MOVWF      FSR
0x0207	0x0800      	MOVF       INDF, 0
0x0208	0x00CB      	MOVWF      FARG_YM3812_SetRegister_ch
0x0209	0x2022      	CALL       _YM3812_SetRegister
;lib_channel.c,124 :: 		}
L_end_SetBlock:
0x020A	0x0008      	RETURN
; end of _SetBlock
_Mute:
;lib_channel.c,132 :: 		void Mute(struct YM3812_Channel *channel) {
;lib_channel.c,134 :: 		channel->reg_B0 = channel->reg_B0 & 0xDF;
0x020B	0x3009      	MOVLW      9
0x020C	0x1283      	BCF        STATUS, 5
0x020D	0x1303      	BCF        STATUS, 6
0x020E	0x0746      	ADDWF      FARG_Mute_channel, 0
0x020F	0x00F1      	MOVWF      R1
0x0210	0x0871      	MOVF       R1, 0
0x0211	0x0084      	MOVWF      FSR
0x0212	0x30DF      	MOVLW      223
0x0213	0x0500      	ANDWF      INDF, 0
0x0214	0x00F0      	MOVWF      R0
0x0215	0x0871      	MOVF       R1, 0
0x0216	0x0084      	MOVWF      FSR
0x0217	0x0870      	MOVF       R0, 0
0x0218	0x0080      	MOVWF      INDF
;lib_channel.c,135 :: 		YM3812_SetRegister(0xB0, channel->reg_B0, channel->ChannelNumber);
0x0219	0x30B0      	MOVLW      176
0x021A	0x00C9      	MOVWF      FARG_YM3812_SetRegister_reg
0x021B	0x3009      	MOVLW      9
0x021C	0x0746      	ADDWF      FARG_Mute_channel, 0
0x021D	0x0084      	MOVWF      FSR
0x021E	0x0800      	MOVF       INDF, 0
0x021F	0x00CA      	MOVWF      FARG_YM3812_SetRegister_dt
0x0220	0x0846      	MOVF       FARG_Mute_channel, 0
0x0221	0x0084      	MOVWF      FSR
0x0222	0x0800      	MOVF       INDF, 0
0x0223	0x00CB      	MOVWF      FARG_YM3812_SetRegister_ch
0x0224	0x2022      	CALL       _YM3812_SetRegister
;lib_channel.c,136 :: 		}
L_end_Mute:
0x0225	0x0008      	RETURN
; end of _Mute
_SetFrequency:
;lib_channel.c,109 :: 		) {
;lib_channel.c,110 :: 		YM3812_SetRegister(0xA0, lower, channel->ChannelNumber);
0x0226	0x30A0      	MOVLW      160
0x0227	0x1283      	BCF        STATUS, 5
0x0228	0x1303      	BCF        STATUS, 6
0x0229	0x00C9      	MOVWF      FARG_YM3812_SetRegister_reg
0x022A	0x0848      	MOVF       FARG_SetFrequency_lower, 0
0x022B	0x00CA      	MOVWF      FARG_YM3812_SetRegister_dt
0x022C	0x0846      	MOVF       FARG_SetFrequency_channel, 0
0x022D	0x0084      	MOVWF      FSR
0x022E	0x0800      	MOVF       INDF, 0
0x022F	0x00CB      	MOVWF      FARG_YM3812_SetRegister_ch
0x0230	0x2022      	CALL       _YM3812_SetRegister
;lib_channel.c,113 :: 		channel->reg_B0 = (channel->reg_B0 & 0xFC) | upper;
0x0231	0x3009      	MOVLW      9
0x0232	0x0746      	ADDWF      FARG_SetFrequency_channel, 0
0x0233	0x00F1      	MOVWF      R1
0x0234	0x0871      	MOVF       R1, 0
0x0235	0x0084      	MOVWF      FSR
0x0236	0x30FC      	MOVLW      252
0x0237	0x0500      	ANDWF      INDF, 0
0x0238	0x00F0      	MOVWF      R0
0x0239	0x0847      	MOVF       FARG_SetFrequency_upper, 0
0x023A	0x04F0      	IORWF      R0, 1
0x023B	0x0871      	MOVF       R1, 0
0x023C	0x0084      	MOVWF      FSR
0x023D	0x0870      	MOVF       R0, 0
0x023E	0x0080      	MOVWF      INDF
;lib_channel.c,114 :: 		YM3812_SetRegister(0xB0, channel->reg_B0, channel->ChannelNumber);
0x023F	0x30B0      	MOVLW      176
0x0240	0x00C9      	MOVWF      FARG_YM3812_SetRegister_reg
0x0241	0x3009      	MOVLW      9
0x0242	0x0746      	ADDWF      FARG_SetFrequency_channel, 0
0x0243	0x0084      	MOVWF      FSR
0x0244	0x0800      	MOVF       INDF, 0
0x0245	0x00CA      	MOVWF      FARG_YM3812_SetRegister_dt
0x0246	0x0846      	MOVF       FARG_SetFrequency_channel, 0
0x0247	0x0084      	MOVWF      FSR
0x0248	0x0800      	MOVF       INDF, 0
0x0249	0x00CB      	MOVWF      FARG_YM3812_SetRegister_ch
0x024A	0x2022      	CALL       _YM3812_SetRegister
;lib_channel.c,115 :: 		}
L_end_SetFrequency:
0x024B	0x0008      	RETURN
; end of _SetFrequency
_SetMultiplier:
;lib_channel.c,22 :: 		) {
;lib_channel.c,24 :: 		channel->reg_20[o] = (channel->reg_20[o] & 0xF0) | d;
0x024C	0x1283      	BCF        STATUS, 5
0x024D	0x1303      	BCF        STATUS, 6
0x024E	0x0A46      	INCF       FARG_SetMultiplier_channel, 0
0x024F	0x00F0      	MOVWF      R0
0x0250	0x0847      	MOVF       FARG_SetMultiplier_o, 0
0x0251	0x0770      	ADDWF      R0, 0
0x0252	0x00F1      	MOVWF      R1
0x0253	0x0871      	MOVF       R1, 0
0x0254	0x0084      	MOVWF      FSR
0x0255	0x30F0      	MOVLW      240
0x0256	0x0500      	ANDWF      INDF, 0
0x0257	0x00F0      	MOVWF      R0
0x0258	0x0848      	MOVF       FARG_SetMultiplier_d, 0
0x0259	0x04F0      	IORWF      R0, 1
0x025A	0x0871      	MOVF       R1, 0
0x025B	0x0084      	MOVWF      FSR
0x025C	0x0870      	MOVF       R0, 0
0x025D	0x0080      	MOVWF      INDF
;lib_channel.c,26 :: 		YM3812_SetOperatorRegister(0x20, channel->reg_20[o], channel->ChannelNumber, o);
0x025E	0x3020      	MOVLW      32
0x025F	0x00C9      	MOVWF      FARG_YM3812_SetOperatorRegister_reg
0x0260	0x0A46      	INCF       FARG_SetMultiplier_channel, 0
0x0261	0x00F0      	MOVWF      R0
0x0262	0x0847      	MOVF       FARG_SetMultiplier_o, 0
0x0263	0x0770      	ADDWF      R0, 0
0x0264	0x0084      	MOVWF      FSR
0x0265	0x0800      	MOVF       INDF, 0
0x0266	0x00CA      	MOVWF      FARG_YM3812_SetOperatorRegister_dt
0x0267	0x0846      	MOVF       FARG_SetMultiplier_channel, 0
0x0268	0x0084      	MOVWF      FSR
0x0269	0x0800      	MOVF       INDF, 0
0x026A	0x00CB      	MOVWF      FARG_YM3812_SetOperatorRegister_ch
0x026B	0x0847      	MOVF       FARG_SetMultiplier_o, 0
0x026C	0x00CC      	MOVWF      FARG_YM3812_SetOperatorRegister_op
0x026D	0x203B      	CALL       _YM3812_SetOperatorRegister
;lib_channel.c,27 :: 		}
L_end_SetMultiplier:
0x026E	0x0008      	RETURN
; end of _SetMultiplier
_YM3812_GetNote:
;lib_ym3812.c,71 :: 		) {
;lib_ym3812.c,72 :: 		switch(n){
0x026F	0x2ADE      	GOTO       L_YM3812_GetNote3
;lib_ym3812.c,73 :: 		case 0x00:
L_YM3812_GetNote5:
;lib_ym3812.c,74 :: 		*upper = 0x01;
0x0270	0x1283      	BCF        STATUS, 5
0x0271	0x1303      	BCF        STATUS, 6
0x0272	0x0847      	MOVF       FARG_YM3812_GetNote_upper, 0
0x0273	0x0084      	MOVWF      FSR
0x0274	0x3001      	MOVLW      1
0x0275	0x0080      	MOVWF      INDF
;lib_ym3812.c,75 :: 		*lower = 0x6B;
0x0276	0x0848      	MOVF       FARG_YM3812_GetNote_lower, 0
0x0277	0x0084      	MOVWF      FSR
0x0278	0x306B      	MOVLW      107
0x0279	0x0080      	MOVWF      INDF
;lib_ym3812.c,76 :: 		break;
0x027A	0x2B10      	GOTO       L_YM3812_GetNote4
;lib_ym3812.c,77 :: 		case 0x01:
L_YM3812_GetNote6:
;lib_ym3812.c,78 :: 		*upper = 0x01;
0x027B	0x0847      	MOVF       FARG_YM3812_GetNote_upper, 0
0x027C	0x0084      	MOVWF      FSR
0x027D	0x3001      	MOVLW      1
0x027E	0x0080      	MOVWF      INDF
;lib_ym3812.c,79 :: 		*lower = 0x81;
0x027F	0x0848      	MOVF       FARG_YM3812_GetNote_lower, 0
0x0280	0x0084      	MOVWF      FSR
0x0281	0x3081      	MOVLW      129
0x0282	0x0080      	MOVWF      INDF
;lib_ym3812.c,80 :: 		break;
0x0283	0x2B10      	GOTO       L_YM3812_GetNote4
;lib_ym3812.c,81 :: 		case 0x02:
L_YM3812_GetNote7:
;lib_ym3812.c,82 :: 		*upper = 0x01;
0x0284	0x0847      	MOVF       FARG_YM3812_GetNote_upper, 0
0x0285	0x0084      	MOVWF      FSR
0x0286	0x3001      	MOVLW      1
0x0287	0x0080      	MOVWF      INDF
;lib_ym3812.c,83 :: 		*lower = 0x98;
0x0288	0x0848      	MOVF       FARG_YM3812_GetNote_lower, 0
0x0289	0x0084      	MOVWF      FSR
0x028A	0x3098      	MOVLW      152
0x028B	0x0080      	MOVWF      INDF
;lib_ym3812.c,84 :: 		break;
0x028C	0x2B10      	GOTO       L_YM3812_GetNote4
;lib_ym3812.c,85 :: 		case 0x03:
L_YM3812_GetNote8:
;lib_ym3812.c,86 :: 		*upper = 0x01;
0x028D	0x0847      	MOVF       FARG_YM3812_GetNote_upper, 0
0x028E	0x0084      	MOVWF      FSR
0x028F	0x3001      	MOVLW      1
0x0290	0x0080      	MOVWF      INDF
;lib_ym3812.c,87 :: 		*lower = 0xB0;
0x0291	0x0848      	MOVF       FARG_YM3812_GetNote_lower, 0
0x0292	0x0084      	MOVWF      FSR
0x0293	0x30B0      	MOVLW      176
0x0294	0x0080      	MOVWF      INDF
;lib_ym3812.c,88 :: 		break;
0x0295	0x2B10      	GOTO       L_YM3812_GetNote4
;lib_ym3812.c,89 :: 		case 0x04:
L_YM3812_GetNote9:
;lib_ym3812.c,90 :: 		*upper = 0x01;
0x0296	0x0847      	MOVF       FARG_YM3812_GetNote_upper, 0
0x0297	0x0084      	MOVWF      FSR
0x0298	0x3001      	MOVLW      1
0x0299	0x0080      	MOVWF      INDF
;lib_ym3812.c,91 :: 		*lower = 0xCA;
0x029A	0x0848      	MOVF       FARG_YM3812_GetNote_lower, 0
0x029B	0x0084      	MOVWF      FSR
0x029C	0x30CA      	MOVLW      202
0x029D	0x0080      	MOVWF      INDF
;lib_ym3812.c,92 :: 		break;
0x029E	0x2B10      	GOTO       L_YM3812_GetNote4
;lib_ym3812.c,93 :: 		case 0x05:
L_YM3812_GetNote10:
;lib_ym3812.c,94 :: 		*upper = 0x01;
0x029F	0x0847      	MOVF       FARG_YM3812_GetNote_upper, 0
0x02A0	0x0084      	MOVWF      FSR
0x02A1	0x3001      	MOVLW      1
0x02A2	0x0080      	MOVWF      INDF
;lib_ym3812.c,95 :: 		*lower = 0xE5;
0x02A3	0x0848      	MOVF       FARG_YM3812_GetNote_lower, 0
0x02A4	0x0084      	MOVWF      FSR
0x02A5	0x30E5      	MOVLW      229
0x02A6	0x0080      	MOVWF      INDF
;lib_ym3812.c,96 :: 		break;
0x02A7	0x2B10      	GOTO       L_YM3812_GetNote4
;lib_ym3812.c,97 :: 		case 0x06:
L_YM3812_GetNote11:
;lib_ym3812.c,98 :: 		*upper = 0x02;
0x02A8	0x0847      	MOVF       FARG_YM3812_GetNote_upper, 0
0x02A9	0x0084      	MOVWF      FSR
0x02AA	0x3002      	MOVLW      2
0x02AB	0x0080      	MOVWF      INDF
;lib_ym3812.c,99 :: 		*lower = 0x02;
0x02AC	0x0848      	MOVF       FARG_YM3812_GetNote_lower, 0
0x02AD	0x0084      	MOVWF      FSR
0x02AE	0x3002      	MOVLW      2
0x02AF	0x0080      	MOVWF      INDF
;lib_ym3812.c,100 :: 		break;
0x02B0	0x2B10      	GOTO       L_YM3812_GetNote4
;lib_ym3812.c,101 :: 		case 0x07:
L_YM3812_GetNote12:
;lib_ym3812.c,102 :: 		*upper = 0x02;
0x02B1	0x0847      	MOVF       FARG_YM3812_GetNote_upper, 0
0x02B2	0x0084      	MOVWF      FSR
0x02B3	0x3002      	MOVLW      2
0x02B4	0x0080      	MOVWF      INDF
;lib_ym3812.c,103 :: 		*lower = 0x20;
0x02B5	0x0848      	MOVF       FARG_YM3812_GetNote_lower, 0
0x02B6	0x0084      	MOVWF      FSR
0x02B7	0x3020      	MOVLW      32
0x02B8	0x0080      	MOVWF      INDF
;lib_ym3812.c,104 :: 		break;
0x02B9	0x2B10      	GOTO       L_YM3812_GetNote4
;lib_ym3812.c,105 :: 		case 0x08:
L_YM3812_GetNote13:
;lib_ym3812.c,106 :: 		*upper = 0x02;
0x02BA	0x0847      	MOVF       FARG_YM3812_GetNote_upper, 0
0x02BB	0x0084      	MOVWF      FSR
0x02BC	0x3002      	MOVLW      2
0x02BD	0x0080      	MOVWF      INDF
;lib_ym3812.c,107 :: 		*lower = 0x41;
0x02BE	0x0848      	MOVF       FARG_YM3812_GetNote_lower, 0
0x02BF	0x0084      	MOVWF      FSR
0x02C0	0x3041      	MOVLW      65
0x02C1	0x0080      	MOVWF      INDF
;lib_ym3812.c,108 :: 		break;
0x02C2	0x2B10      	GOTO       L_YM3812_GetNote4
;lib_ym3812.c,109 :: 		case 0x09:
L_YM3812_GetNote14:
;lib_ym3812.c,110 :: 		*upper = 0x02;
0x02C3	0x0847      	MOVF       FARG_YM3812_GetNote_upper, 0
0x02C4	0x0084      	MOVWF      FSR
0x02C5	0x3002      	MOVLW      2
0x02C6	0x0080      	MOVWF      INDF
;lib_ym3812.c,111 :: 		*lower = 0x63;
0x02C7	0x0848      	MOVF       FARG_YM3812_GetNote_lower, 0
0x02C8	0x0084      	MOVWF      FSR
0x02C9	0x3063      	MOVLW      99
0x02CA	0x0080      	MOVWF      INDF
;lib_ym3812.c,112 :: 		break;
0x02CB	0x2B10      	GOTO       L_YM3812_GetNote4
;lib_ym3812.c,113 :: 		case 0x0A:
L_YM3812_GetNote15:
;lib_ym3812.c,114 :: 		*upper = 0x02;
0x02CC	0x0847      	MOVF       FARG_YM3812_GetNote_upper, 0
0x02CD	0x0084      	MOVWF      FSR
0x02CE	0x3002      	MOVLW      2
0x02CF	0x0080      	MOVWF      INDF
;lib_ym3812.c,115 :: 		*lower = 0x87;
0x02D0	0x0848      	MOVF       FARG_YM3812_GetNote_lower, 0
0x02D1	0x0084      	MOVWF      FSR
0x02D2	0x3087      	MOVLW      135
0x02D3	0x0080      	MOVWF      INDF
;lib_ym3812.c,116 :: 		break;
0x02D4	0x2B10      	GOTO       L_YM3812_GetNote4
;lib_ym3812.c,117 :: 		case 0x0B:
L_YM3812_GetNote16:
;lib_ym3812.c,118 :: 		*upper = 0x02;
0x02D5	0x0847      	MOVF       FARG_YM3812_GetNote_upper, 0
0x02D6	0x0084      	MOVWF      FSR
0x02D7	0x3002      	MOVLW      2
0x02D8	0x0080      	MOVWF      INDF
;lib_ym3812.c,119 :: 		*lower = 0xAE;
0x02D9	0x0848      	MOVF       FARG_YM3812_GetNote_lower, 0
0x02DA	0x0084      	MOVWF      FSR
0x02DB	0x30AE      	MOVLW      174
0x02DC	0x0080      	MOVWF      INDF
;lib_ym3812.c,120 :: 		break;
0x02DD	0x2B10      	GOTO       L_YM3812_GetNote4
;lib_ym3812.c,121 :: 		}
L_YM3812_GetNote3:
0x02DE	0x1283      	BCF        STATUS, 5
0x02DF	0x1303      	BCF        STATUS, 6
0x02E0	0x0846      	MOVF       FARG_YM3812_GetNote_n, 0
0x02E1	0x3A00      	XORLW      0
0x02E2	0x1903      	BTFSC      STATUS, 2
0x02E3	0x2A70      	GOTO       L_YM3812_GetNote5
0x02E4	0x0846      	MOVF       FARG_YM3812_GetNote_n, 0
0x02E5	0x3A01      	XORLW      1
0x02E6	0x1903      	BTFSC      STATUS, 2
0x02E7	0x2A7B      	GOTO       L_YM3812_GetNote6
0x02E8	0x0846      	MOVF       FARG_YM3812_GetNote_n, 0
0x02E9	0x3A02      	XORLW      2
0x02EA	0x1903      	BTFSC      STATUS, 2
0x02EB	0x2A84      	GOTO       L_YM3812_GetNote7
0x02EC	0x0846      	MOVF       FARG_YM3812_GetNote_n, 0
0x02ED	0x3A03      	XORLW      3
0x02EE	0x1903      	BTFSC      STATUS, 2
0x02EF	0x2A8D      	GOTO       L_YM3812_GetNote8
0x02F0	0x0846      	MOVF       FARG_YM3812_GetNote_n, 0
0x02F1	0x3A04      	XORLW      4
0x02F2	0x1903      	BTFSC      STATUS, 2
0x02F3	0x2A96      	GOTO       L_YM3812_GetNote9
0x02F4	0x0846      	MOVF       FARG_YM3812_GetNote_n, 0
0x02F5	0x3A05      	XORLW      5
0x02F6	0x1903      	BTFSC      STATUS, 2
0x02F7	0x2A9F      	GOTO       L_YM3812_GetNote10
0x02F8	0x0846      	MOVF       FARG_YM3812_GetNote_n, 0
0x02F9	0x3A06      	XORLW      6
0x02FA	0x1903      	BTFSC      STATUS, 2
0x02FB	0x2AA8      	GOTO       L_YM3812_GetNote11
0x02FC	0x0846      	MOVF       FARG_YM3812_GetNote_n, 0
0x02FD	0x3A07      	XORLW      7
0x02FE	0x1903      	BTFSC      STATUS, 2
0x02FF	0x2AB1      	GOTO       L_YM3812_GetNote12
0x0300	0x0846      	MOVF       FARG_YM3812_GetNote_n, 0
0x0301	0x3A08      	XORLW      8
0x0302	0x1903      	BTFSC      STATUS, 2
0x0303	0x2ABA      	GOTO       L_YM3812_GetNote13
0x0304	0x0846      	MOVF       FARG_YM3812_GetNote_n, 0
0x0305	0x3A09      	XORLW      9
0x0306	0x1903      	BTFSC      STATUS, 2
0x0307	0x2AC3      	GOTO       L_YM3812_GetNote14
0x0308	0x0846      	MOVF       FARG_YM3812_GetNote_n, 0
0x0309	0x3A0A      	XORLW      10
0x030A	0x1903      	BTFSC      STATUS, 2
0x030B	0x2ACC      	GOTO       L_YM3812_GetNote15
0x030C	0x0846      	MOVF       FARG_YM3812_GetNote_n, 0
0x030D	0x3A0B      	XORLW      11
0x030E	0x1903      	BTFSC      STATUS, 2
0x030F	0x2AD5      	GOTO       L_YM3812_GetNote16
L_YM3812_GetNote4:
;lib_ym3812.c,122 :: 		}
L_end_YM3812_GetNote:
0x0310	0x0008      	RETURN
; end of _YM3812_GetNote
_Play:
;lib_channel.c,126 :: 		void Play(struct YM3812_Channel *channel) {
;lib_channel.c,128 :: 		channel->reg_B0 = (channel->reg_B0 & 0xDF) | 0x20;
0x0311	0x3009      	MOVLW      9
0x0312	0x1283      	BCF        STATUS, 5
0x0313	0x1303      	BCF        STATUS, 6
0x0314	0x0746      	ADDWF      FARG_Play_channel, 0
0x0315	0x00F1      	MOVWF      R1
0x0316	0x0871      	MOVF       R1, 0
0x0317	0x0084      	MOVWF      FSR
0x0318	0x30DF      	MOVLW      223
0x0319	0x0500      	ANDWF      INDF, 0
0x031A	0x00F0      	MOVWF      R0
0x031B	0x16F0      	BSF        R0, 5
0x031C	0x0871      	MOVF       R1, 0
0x031D	0x0084      	MOVWF      FSR
0x031E	0x0870      	MOVF       R0, 0
0x031F	0x0080      	MOVWF      INDF
;lib_channel.c,129 :: 		YM3812_SetRegister(0xB0, channel->reg_B0, channel->ChannelNumber);
0x0320	0x30B0      	MOVLW      176
0x0321	0x00C9      	MOVWF      FARG_YM3812_SetRegister_reg
0x0322	0x3009      	MOVLW      9
0x0323	0x0746      	ADDWF      FARG_Play_channel, 0
0x0324	0x0084      	MOVWF      FSR
0x0325	0x0800      	MOVF       INDF, 0
0x0326	0x00CA      	MOVWF      FARG_YM3812_SetRegister_dt
0x0327	0x0846      	MOVF       FARG_Play_channel, 0
0x0328	0x0084      	MOVWF      FSR
0x0329	0x0800      	MOVF       INDF, 0
0x032A	0x00CB      	MOVWF      FARG_YM3812_SetRegister_ch
0x032B	0x2022      	CALL       _YM3812_SetRegister
;lib_channel.c,130 :: 		}
L_end_Play:
0x032C	0x0008      	RETURN
; end of _Play
_main:
;YM3812.c,43 :: 		void main() {
;YM3812.c,51 :: 		ANSEL = ANSELH = 0;
0x032D	0x1683      	BSF        STATUS, 5
0x032E	0x1703      	BSF        STATUS, 6
0x032F	0x0189      	CLRF       ANSELH
0x0330	0x0188      	CLRF       ANSEL
;YM3812.c,53 :: 		YM3812_Init();
0x0331	0x211F      	CALL       _YM3812_Init
;YM3812.c,55 :: 		delay_ms(10);
0x0332	0x301A      	MOVLW      26
0x0333	0x00FC      	MOVWF      R12
0x0334	0x30F8      	MOVLW      248
0x0335	0x00FD      	MOVWF      R13
L_main0:
0x0336	0x0BFD      	DECFSZ     R13, 1
0x0337	0x2B36      	GOTO       L_main0
0x0338	0x0BFC      	DECFSZ     R12, 1
0x0339	0x2B36      	GOTO       L_main0
0x033A	0x0000      	NOP
;YM3812.c,57 :: 		YM3812_Reset();
0x033B	0x2128      	CALL       _YM3812_Reset
;YM3812.c,60 :: 		Init(&channel[0]);
0x033C	0x3022      	MOVLW      main_channel_L0
0x033D	0x00C6      	MOVWF      FARG_Init_channel
0x033E	0x205D      	CALL       _Init
;YM3812.c,61 :: 		channel[0].ChannelNumber = CHANNEL_0;
0x033F	0x01A2      	CLRF       main_channel_L0
;YM3812.c,62 :: 		Init(&channel[1]);
0x0340	0x302D      	MOVLW      main_channel_L0+11
0x0341	0x00C6      	MOVWF      FARG_Init_channel
0x0342	0x205D      	CALL       _Init
;YM3812.c,63 :: 		channel[1].ChannelNumber = CHANNEL_1;
0x0343	0x3001      	MOVLW      1
0x0344	0x00AD      	MOVWF      main_channel_L0+11
;YM3812.c,78 :: 		for(i=0; i<NB_CHANNEL; ++i) {
0x0345	0x01BE      	CLRF       main_i_L0
L_main1:
0x0346	0x3002      	MOVLW      2
0x0347	0x023E      	SUBWF      main_i_L0, 0
0x0348	0x1803      	BTFSC      STATUS, 0
0x0349	0x2C02      	GOTO       L_main2
;YM3812.c,80 :: 		SetMultiplier(&channel[i], MODULATOR, 0x02);
0x034A	0x300B      	MOVLW      11
0x034B	0x00F0      	MOVWF      R0
0x034C	0x083E      	MOVF       main_i_L0, 0
0x034D	0x00F4      	MOVWF      R4
0x034E	0x20E1      	CALL       _Mul_8X8_U
0x034F	0x0870      	MOVF       R0, 0
0x0350	0x3E22      	ADDLW      main_channel_L0
0x0351	0x00C6      	MOVWF      FARG_SetMultiplier_channel
0x0352	0x01C7      	CLRF       FARG_SetMultiplier_o
0x0353	0x3002      	MOVLW      2
0x0354	0x00C8      	MOVWF      FARG_SetMultiplier_d
0x0355	0x224C      	CALL       _SetMultiplier
;YM3812.c,83 :: 		SetVolume(&channel[i], MODULATOR, 0x29);
0x0356	0x300B      	MOVLW      11
0x0357	0x00F0      	MOVWF      R0
0x0358	0x083E      	MOVF       main_i_L0, 0
0x0359	0x00F4      	MOVWF      R4
0x035A	0x20E1      	CALL       _Mul_8X8_U
0x035B	0x0870      	MOVF       R0, 0
0x035C	0x3E22      	ADDLW      main_channel_L0
0x035D	0x00C6      	MOVWF      FARG_SetVolume_channel
0x035E	0x01C7      	CLRF       FARG_SetVolume_o
0x035F	0x3029      	MOVLW      41
0x0360	0x00C8      	MOVWF      FARG_SetVolume_d
0x0361	0x2091      	CALL       _SetVolume
;YM3812.c,86 :: 		setAttack(&channel[i], MODULATOR, 0x0F);
0x0362	0x300B      	MOVLW      11
0x0363	0x00F0      	MOVWF      R0
0x0364	0x083E      	MOVF       main_i_L0, 0
0x0365	0x00F4      	MOVWF      R4
0x0366	0x20E1      	CALL       _Mul_8X8_U
0x0367	0x0870      	MOVF       R0, 0
0x0368	0x3E22      	ADDLW      main_channel_L0
0x0369	0x00C6      	MOVWF      FARG_SetAttack_channel
0x036A	0x01C7      	CLRF       FARG_SetAttack_o
0x036B	0x300F      	MOVLW      15
0x036C	0x00C8      	MOVWF      FARG_SetAttack_d
0x036D	0x215D      	CALL       _SetAttack
;YM3812.c,87 :: 		setDecay(&channel[i], MODULATOR, 0x05);
0x036E	0x300B      	MOVLW      11
0x036F	0x00F0      	MOVWF      R0
0x0370	0x083E      	MOVF       main_i_L0, 0
0x0371	0x00F4      	MOVWF      R4
0x0372	0x20E1      	CALL       _Mul_8X8_U
0x0373	0x0870      	MOVF       R0, 0
0x0374	0x3E22      	ADDLW      main_channel_L0
0x0375	0x00C6      	MOVWF      FARG_SetDecay_channel
0x0376	0x01C7      	CLRF       FARG_SetDecay_o
0x0377	0x3005      	MOVLW      5
0x0378	0x00C8      	MOVWF      FARG_SetDecay_d
0x0379	0x2138      	CALL       _SetDecay
;YM3812.c,90 :: 		setSustain(&channel[i], MODULATOR, 0x07);
0x037A	0x300B      	MOVLW      11
0x037B	0x00F0      	MOVWF      R0
0x037C	0x083E      	MOVF       main_i_L0, 0
0x037D	0x00F4      	MOVWF      R4
0x037E	0x20E1      	CALL       _Mul_8X8_U
0x037F	0x0870      	MOVF       R0, 0
0x0380	0x3E22      	ADDLW      main_channel_L0
0x0381	0x00C6      	MOVWF      FARG_SetSustain_channel
0x0382	0x01C7      	CLRF       FARG_SetSustain_o
0x0383	0x3007      	MOVLW      7
0x0384	0x00C8      	MOVWF      FARG_SetSustain_d
0x0385	0x21B9      	CALL       _SetSustain
;YM3812.c,91 :: 		setRelease(&channel[i], MODULATOR, 0x05);
0x0386	0x300B      	MOVLW      11
0x0387	0x00F0      	MOVWF      R0
0x0388	0x083E      	MOVF       main_i_L0, 0
0x0389	0x00F4      	MOVWF      R4
0x038A	0x20E1      	CALL       _Mul_8X8_U
0x038B	0x0870      	MOVF       R0, 0
0x038C	0x3E22      	ADDLW      main_channel_L0
0x038D	0x00C6      	MOVWF      FARG_SetRelease_channel
0x038E	0x01C7      	CLRF       FARG_SetRelease_o
0x038F	0x3005      	MOVLW      5
0x0390	0x00C8      	MOVWF      FARG_SetRelease_d
0x0391	0x20FA      	CALL       _SetRelease
;YM3812.c,94 :: 		SetFeedback(&channel[i], 0x00);
0x0392	0x300B      	MOVLW      11
0x0393	0x00F0      	MOVWF      R0
0x0394	0x083E      	MOVF       main_i_L0, 0
0x0395	0x00F4      	MOVWF      R4
0x0396	0x20E1      	CALL       _Mul_8X8_U
0x0397	0x0870      	MOVF       R0, 0
0x0398	0x3E22      	ADDLW      main_channel_L0
0x0399	0x00C6      	MOVWF      FARG_SetFeedback_channel
0x039A	0x01C7      	CLRF       FARG_SetFeedback_d
0x039B	0x218C      	CALL       _SetFeedback
;YM3812.c,97 :: 		SetMultiplier(&channel[i], CARRIER, 0x01);
0x039C	0x300B      	MOVLW      11
0x039D	0x00F0      	MOVWF      R0
0x039E	0x083E      	MOVF       main_i_L0, 0
0x039F	0x00F4      	MOVWF      R4
0x03A0	0x20E1      	CALL       _Mul_8X8_U
0x03A1	0x0870      	MOVF       R0, 0
0x03A2	0x3E22      	ADDLW      main_channel_L0
0x03A3	0x00C6      	MOVWF      FARG_SetMultiplier_channel
0x03A4	0x3001      	MOVLW      1
0x03A5	0x00C7      	MOVWF      FARG_SetMultiplier_o
0x03A6	0x3001      	MOVLW      1
0x03A7	0x00C8      	MOVWF      FARG_SetMultiplier_d
0x03A8	0x224C      	CALL       _SetMultiplier
;YM3812.c,100 :: 		SetVolume(&channel[i], CARRIER, 0x00);
0x03A9	0x300B      	MOVLW      11
0x03AA	0x00F0      	MOVWF      R0
0x03AB	0x083E      	MOVF       main_i_L0, 0
0x03AC	0x00F4      	MOVWF      R4
0x03AD	0x20E1      	CALL       _Mul_8X8_U
0x03AE	0x0870      	MOVF       R0, 0
0x03AF	0x3E22      	ADDLW      main_channel_L0
0x03B0	0x00C6      	MOVWF      FARG_SetVolume_channel
0x03B1	0x3001      	MOVLW      1
0x03B2	0x00C7      	MOVWF      FARG_SetVolume_o
0x03B3	0x01C8      	CLRF       FARG_SetVolume_d
0x03B4	0x2091      	CALL       _SetVolume
;YM3812.c,103 :: 		setAttack(&channel[i], CARRIER, 0x0F);
0x03B5	0x300B      	MOVLW      11
0x03B6	0x00F0      	MOVWF      R0
0x03B7	0x083E      	MOVF       main_i_L0, 0
0x03B8	0x00F4      	MOVWF      R4
0x03B9	0x20E1      	CALL       _Mul_8X8_U
0x03BA	0x0870      	MOVF       R0, 0
0x03BB	0x3E22      	ADDLW      main_channel_L0
0x03BC	0x00C6      	MOVWF      FARG_SetAttack_channel
0x03BD	0x3001      	MOVLW      1
0x03BE	0x00C7      	MOVWF      FARG_SetAttack_o
0x03BF	0x300F      	MOVLW      15
0x03C0	0x00C8      	MOVWF      FARG_SetAttack_d
0x03C1	0x215D      	CALL       _SetAttack
;YM3812.c,104 :: 		setDecay(&channel[i], CARRIER, 0x02);
0x03C2	0x300B      	MOVLW      11
0x03C3	0x00F0      	MOVWF      R0
0x03C4	0x083E      	MOVF       main_i_L0, 0
0x03C5	0x00F4      	MOVWF      R4
0x03C6	0x20E1      	CALL       _Mul_8X8_U
0x03C7	0x0870      	MOVF       R0, 0
0x03C8	0x3E22      	ADDLW      main_channel_L0
0x03C9	0x00C6      	MOVWF      FARG_SetDecay_channel
0x03CA	0x3001      	MOVLW      1
0x03CB	0x00C7      	MOVWF      FARG_SetDecay_o
0x03CC	0x3002      	MOVLW      2
0x03CD	0x00C8      	MOVWF      FARG_SetDecay_d
0x03CE	0x2138      	CALL       _SetDecay
;YM3812.c,107 :: 		setSustain(&channel[i], CARRIER, 0x0F);
0x03CF	0x300B      	MOVLW      11
0x03D0	0x00F0      	MOVWF      R0
0x03D1	0x083E      	MOVF       main_i_L0, 0
0x03D2	0x00F4      	MOVWF      R4
0x03D3	0x20E1      	CALL       _Mul_8X8_U
0x03D4	0x0870      	MOVF       R0, 0
0x03D5	0x3E22      	ADDLW      main_channel_L0
0x03D6	0x00C6      	MOVWF      FARG_SetSustain_channel
0x03D7	0x3001      	MOVLW      1
0x03D8	0x00C7      	MOVWF      FARG_SetSustain_o
0x03D9	0x300F      	MOVLW      15
0x03DA	0x00C8      	MOVWF      FARG_SetSustain_d
0x03DB	0x21B9      	CALL       _SetSustain
;YM3812.c,108 :: 		setRelease(&channel[i], CARRIER, 0x03);
0x03DC	0x300B      	MOVLW      11
0x03DD	0x00F0      	MOVWF      R0
0x03DE	0x083E      	MOVF       main_i_L0, 0
0x03DF	0x00F4      	MOVWF      R4
0x03E0	0x20E1      	CALL       _Mul_8X8_U
0x03E1	0x0870      	MOVF       R0, 0
0x03E2	0x3E22      	ADDLW      main_channel_L0
0x03E3	0x00C6      	MOVWF      FARG_SetRelease_channel
0x03E4	0x3001      	MOVLW      1
0x03E5	0x00C7      	MOVWF      FARG_SetRelease_o
0x03E6	0x3003      	MOVLW      3
0x03E7	0x00C8      	MOVWF      FARG_SetRelease_d
0x03E8	0x20FA      	CALL       _SetRelease
;YM3812.c,111 :: 		channel[i].reg_B0 = 0x11;
0x03E9	0x300B      	MOVLW      11
0x03EA	0x00F0      	MOVWF      R0
0x03EB	0x083E      	MOVF       main_i_L0, 0
0x03EC	0x00F4      	MOVWF      R4
0x03ED	0x20E1      	CALL       _Mul_8X8_U
0x03EE	0x3022      	MOVLW      main_channel_L0
0x03EF	0x07F0      	ADDWF      R0, 1
0x03F0	0x3009      	MOVLW      9
0x03F1	0x0770      	ADDWF      R0, 0
0x03F2	0x0084      	MOVWF      FSR
0x03F3	0x3011      	MOVLW      17
0x03F4	0x0080      	MOVWF      INDF
;YM3812.c,112 :: 		SetBlock(&channel[i], 0x06);
0x03F5	0x300B      	MOVLW      11
0x03F6	0x00F0      	MOVWF      R0
0x03F7	0x083E      	MOVF       main_i_L0, 0
0x03F8	0x00F4      	MOVWF      R4
0x03F9	0x20E1      	CALL       _Mul_8X8_U
0x03FA	0x0870      	MOVF       R0, 0
0x03FB	0x3E22      	ADDLW      main_channel_L0
0x03FC	0x00C6      	MOVWF      FARG_SetBlock_channel
0x03FD	0x3006      	MOVLW      6
0x03FE	0x00C7      	MOVWF      FARG_SetBlock_d
0x03FF	0x21E8      	CALL       _SetBlock
;YM3812.c,78 :: 		for(i=0; i<NB_CHANNEL; ++i) {
0x0400	0x0ABE      	INCF       main_i_L0, 1
;YM3812.c,113 :: 		}
0x0401	0x2B46      	GOTO       L_main1
L_main2:
;YM3812.c,115 :: 		*tuneReader = tune;
0x0402	0x083D      	MOVF       main_tuneReader_L0, 0
0x0403	0x0084      	MOVWF      FSR
0x0404	0x3008      	MOVLW      _tune
0x0405	0x0080      	MOVWF      INDF
;YM3812.c,116 :: 		nextEvent = 0;
0x0406	0x01C5      	CLRF       main_nextEvent_L0
;YM3812.c,118 :: 		while(1) {
L_main4:
;YM3812.c,119 :: 		i = 0;
0x0407	0x01BE      	CLRF       main_i_L0
;YM3812.c,120 :: 		isPlaying = 0x01;
0x0408	0x3001      	MOVLW      1
0x0409	0x00C2      	MOVWF      main_isPlaying_L0
;YM3812.c,121 :: 		nextEvent = 0x00;
0x040A	0x01C5      	CLRF       main_nextEvent_L0
;YM3812.c,122 :: 		do{
L_main6:
;YM3812.c,123 :: 		while(nextEvent == 0) {
L_main9:
0x040B	0x0845      	MOVF       main_nextEvent_L0, 0
0x040C	0x3A00      	XORLW      0
0x040D	0x1D03      	BTFSS      STATUS, 2
0x040E	0x2CC3      	GOTO       L_main10
;YM3812.c,126 :: 		index = (5*i);
0x040F	0x3005      	MOVLW      5
0x0410	0x00F0      	MOVWF      R0
0x0411	0x083E      	MOVF       main_i_L0, 0
0x0412	0x00F4      	MOVWF      R4
0x0413	0x20E1      	CALL       _Mul_8X8_U
;YM3812.c,127 :: 		tuneBuffer[0] = tune[0 + index];    // Channel
0x0414	0x0870      	MOVF       R0, 0
0x0415	0x00F1      	MOVWF      R1
0x0416	0x01F2      	CLRF       R1+1
0x0417	0x3008      	MOVLW      _tune
0x0418	0x07F1      	ADDWF      R1, 1
0x0419	0x3005      	MOVLW      hi_addr(_tune)
0x041A	0x1803      	BTFSC      STATUS, 0
0x041B	0x3E01      	ADDLW      1
0x041C	0x07F2      	ADDWF      R1+1, 1
0x041D	0x0871      	MOVF       R1, 0
0x041E	0x00A0      	MOVWF      ___DoICPAddr
0x041F	0x0872      	MOVF       R1+1, 0
0x0420	0x00A1      	MOVWF      ___DoICPAddr+1
0x0421	0x201B      	CALL       _____DoICP
0x0422	0x118A      	BCF        PCLATH, 3
0x0423	0x120A      	BCF        PCLATH, 4
0x0424	0x00B8      	MOVWF      main_tuneBuffer_L0
;YM3812.c,128 :: 		tuneBuffer[1] = tune[1 + index];    // Note
0x0425	0x0870      	MOVF       R0, 0
0x0426	0x3E01      	ADDLW      1
0x0427	0x00F1      	MOVWF      R1
0x0428	0x01F2      	CLRF       R1+1
0x0429	0x1803      	BTFSC      STATUS, 0
0x042A	0x0AF2      	INCF       R1+1, 1
0x042B	0x3008      	MOVLW      _tune
0x042C	0x07F1      	ADDWF      R1, 1
0x042D	0x3005      	MOVLW      hi_addr(_tune)
0x042E	0x1803      	BTFSC      STATUS, 0
0x042F	0x3E01      	ADDLW      1
0x0430	0x07F2      	ADDWF      R1+1, 1
0x0431	0x0871      	MOVF       R1, 0
0x0432	0x00A0      	MOVWF      ___DoICPAddr
0x0433	0x0872      	MOVF       R1+1, 0
0x0434	0x00A1      	MOVWF      ___DoICPAddr+1
0x0435	0x201B      	CALL       _____DoICP
0x0436	0x118A      	BCF        PCLATH, 3
0x0437	0x120A      	BCF        PCLATH, 4
0x0438	0x00B9      	MOVWF      main_tuneBuffer_L0+1
;YM3812.c,129 :: 		tuneBuffer[2] = tune[2 + index];    // Octave
0x0439	0x0870      	MOVF       R0, 0
0x043A	0x3E02      	ADDLW      2
0x043B	0x00F1      	MOVWF      R1
0x043C	0x01F2      	CLRF       R1+1
0x043D	0x1803      	BTFSC      STATUS, 0
0x043E	0x0AF2      	INCF       R1+1, 1
0x043F	0x3008      	MOVLW      _tune
0x0440	0x07F1      	ADDWF      R1, 1
0x0441	0x3005      	MOVLW      hi_addr(_tune)
0x0442	0x1803      	BTFSC      STATUS, 0
0x0443	0x3E01      	ADDLW      1
0x0444	0x07F2      	ADDWF      R1+1, 1
0x0445	0x0871      	MOVF       R1, 0
0x0446	0x00A0      	MOVWF      ___DoICPAddr
0x0447	0x0872      	MOVF       R1+1, 0
0x0448	0x00A1      	MOVWF      ___DoICPAddr+1
0x0449	0x201B      	CALL       _____DoICP
0x044A	0x118A      	BCF        PCLATH, 3
0x044B	0x120A      	BCF        PCLATH, 4
0x044C	0x00BA      	MOVWF      main_tuneBuffer_L0+2
;YM3812.c,130 :: 		tuneBuffer[3] = tune[3 + index];    // Press duration
0x044D	0x0870      	MOVF       R0, 0
0x044E	0x3E03      	ADDLW      3
0x044F	0x00F1      	MOVWF      R1
0x0450	0x01F2      	CLRF       R1+1
0x0451	0x1803      	BTFSC      STATUS, 0
0x0452	0x0AF2      	INCF       R1+1, 1
0x0453	0x3008      	MOVLW      _tune
0x0454	0x07F1      	ADDWF      R1, 1
0x0455	0x3005      	MOVLW      hi_addr(_tune)
0x0456	0x1803      	BTFSC      STATUS, 0
0x0457	0x3E01      	ADDLW      1
0x0458	0x07F2      	ADDWF      R1+1, 1
0x0459	0x0871      	MOVF       R1, 0
0x045A	0x00A0      	MOVWF      ___DoICPAddr
0x045B	0x0872      	MOVF       R1+1, 0
0x045C	0x00A1      	MOVWF      ___DoICPAddr+1
0x045D	0x201B      	CALL       _____DoICP
0x045E	0x118A      	BCF        PCLATH, 3
0x045F	0x120A      	BCF        PCLATH, 4
0x0460	0x00BB      	MOVWF      main_tuneBuffer_L0+3
;YM3812.c,131 :: 		tuneBuffer[4] = tune[4 + index];    // Next event
0x0461	0x3004      	MOVLW      4
0x0462	0x07F0      	ADDWF      R0, 1
0x0463	0x01F1      	CLRF       R0+1
0x0464	0x1803      	BTFSC      STATUS, 0
0x0465	0x0AF1      	INCF       R0+1, 1
0x0466	0x3008      	MOVLW      _tune
0x0467	0x07F0      	ADDWF      R0, 1
0x0468	0x3005      	MOVLW      hi_addr(_tune)
0x0469	0x1803      	BTFSC      STATUS, 0
0x046A	0x3E01      	ADDLW      1
0x046B	0x07F1      	ADDWF      R0+1, 1
0x046C	0x0870      	MOVF       R0, 0
0x046D	0x00A0      	MOVWF      ___DoICPAddr
0x046E	0x0871      	MOVF       R0+1, 0
0x046F	0x00A1      	MOVWF      ___DoICPAddr+1
0x0470	0x201B      	CALL       _____DoICP
0x0471	0x118A      	BCF        PCLATH, 3
0x0472	0x120A      	BCF        PCLATH, 4
0x0473	0x00BC      	MOVWF      main_tuneBuffer_L0+4
;YM3812.c,133 :: 		i += 1;
0x0474	0x0ABE      	INCF       main_i_L0, 1
;YM3812.c,135 :: 		if(tuneBuffer[0] == 0xFF) {
0x0475	0x0838      	MOVF       main_tuneBuffer_L0, 0
0x0476	0x3AFF      	XORLW      255
0x0477	0x1D03      	BTFSS      STATUS, 2
0x0478	0x2C7B      	GOTO       L_main11
;YM3812.c,136 :: 		isPlaying = 0x00;
0x0479	0x01C2      	CLRF       main_isPlaying_L0
;YM3812.c,137 :: 		break;
0x047A	0x2CC3      	GOTO       L_main10
;YM3812.c,138 :: 		}
L_main11:
;YM3812.c,141 :: 		nextEvent = tuneBuffer[4];
0x047B	0x083C      	MOVF       main_tuneBuffer_L0+4, 0
0x047C	0x00C5      	MOVWF      main_nextEvent_L0
;YM3812.c,144 :: 		YM3812_GetNote(tuneBuffer[1], &upper, &lower);
0x047D	0x0839      	MOVF       main_tuneBuffer_L0+1, 0
0x047E	0x00C6      	MOVWF      FARG_YM3812_GetNote_n
0x047F	0x3040      	MOVLW      main_upper_L0
0x0480	0x00C7      	MOVWF      FARG_YM3812_GetNote_upper
0x0481	0x3041      	MOVLW      main_lower_L0
0x0482	0x00C8      	MOVWF      FARG_YM3812_GetNote_lower
0x0483	0x226F      	CALL       _YM3812_GetNote
;YM3812.c,145 :: 		SetFrequency(&channel[tuneBuffer[0]-1], upper, lower);
0x0484	0x3001      	MOVLW      1
0x0485	0x0238      	SUBWF      main_tuneBuffer_L0, 0
0x0486	0x00F0      	MOVWF      R0
0x0487	0x01F1      	CLRF       R0+1
0x0488	0x1C03      	BTFSS      STATUS, 0
0x0489	0x03F1      	DECF       R0+1, 1
0x048A	0x300B      	MOVLW      11
0x048B	0x00F4      	MOVWF      R4
0x048C	0x3000      	MOVLW      0
0x048D	0x00F5      	MOVWF      R4+1
0x048E	0x20B6      	CALL       _Mul_16X16_U
0x048F	0x0870      	MOVF       R0, 0
0x0490	0x3E22      	ADDLW      main_channel_L0
0x0491	0x00C6      	MOVWF      FARG_SetFrequency_channel
0x0492	0x0840      	MOVF       main_upper_L0, 0
0x0493	0x00C7      	MOVWF      FARG_SetFrequency_upper
0x0494	0x0841      	MOVF       main_lower_L0, 0
0x0495	0x00C8      	MOVWF      FARG_SetFrequency_lower
0x0496	0x2226      	CALL       _SetFrequency
;YM3812.c,148 :: 		SetBlock(&channel[tuneBuffer[0]-1], tuneBuffer[2]);
0x0497	0x3001      	MOVLW      1
0x0498	0x0238      	SUBWF      main_tuneBuffer_L0, 0
0x0499	0x00F0      	MOVWF      R0
0x049A	0x01F1      	CLRF       R0+1
0x049B	0x1C03      	BTFSS      STATUS, 0
0x049C	0x03F1      	DECF       R0+1, 1
0x049D	0x300B      	MOVLW      11
0x049E	0x00F4      	MOVWF      R4
0x049F	0x3000      	MOVLW      0
0x04A0	0x00F5      	MOVWF      R4+1
0x04A1	0x20B6      	CALL       _Mul_16X16_U
0x04A2	0x0870      	MOVF       R0, 0
0x04A3	0x3E22      	ADDLW      main_channel_L0
0x04A4	0x00C6      	MOVWF      FARG_SetBlock_channel
0x04A5	0x083A      	MOVF       main_tuneBuffer_L0+2, 0
0x04A6	0x00C7      	MOVWF      FARG_SetBlock_d
0x04A7	0x21E8      	CALL       _SetBlock
;YM3812.c,151 :: 		press[tuneBuffer[0]-1] = tuneBuffer[3];
0x04A8	0x3001      	MOVLW      1
0x04A9	0x0238      	SUBWF      main_tuneBuffer_L0, 0
0x04AA	0x00F0      	MOVWF      R0
0x04AB	0x01F1      	CLRF       R0+1
0x04AC	0x1C03      	BTFSS      STATUS, 0
0x04AD	0x03F1      	DECF       R0+1, 1
0x04AE	0x0870      	MOVF       R0, 0
0x04AF	0x3E43      	ADDLW      main_press_L0
0x04B0	0x0084      	MOVWF      FSR
0x04B1	0x083B      	MOVF       main_tuneBuffer_L0+3, 0
0x04B2	0x0080      	MOVWF      INDF
;YM3812.c,152 :: 		Play(&channel[tuneBuffer[0]-1]);
0x04B3	0x3001      	MOVLW      1
0x04B4	0x0238      	SUBWF      main_tuneBuffer_L0, 0
0x04B5	0x00F0      	MOVWF      R0
0x04B6	0x01F1      	CLRF       R0+1
0x04B7	0x1C03      	BTFSS      STATUS, 0
0x04B8	0x03F1      	DECF       R0+1, 1
0x04B9	0x300B      	MOVLW      11
0x04BA	0x00F4      	MOVWF      R4
0x04BB	0x3000      	MOVLW      0
0x04BC	0x00F5      	MOVWF      R4+1
0x04BD	0x20B6      	CALL       _Mul_16X16_U
0x04BE	0x0870      	MOVF       R0, 0
0x04BF	0x3E22      	ADDLW      main_channel_L0
0x04C0	0x00C6      	MOVWF      FARG_Play_channel
0x04C1	0x2311      	CALL       _Play
;YM3812.c,154 :: 		}
0x04C2	0x2C0B      	GOTO       L_main9
L_main10:
;YM3812.c,157 :: 		for(j = 0; j < NB_CHANNEL; ++j) {
0x04C3	0x01BF      	CLRF       main_j_L0
L_main13:
0x04C4	0x3002      	MOVLW      2
0x04C5	0x023F      	SUBWF      main_j_L0, 0
0x04C6	0x1803      	BTFSC      STATUS, 0
0x04C7	0x2CE6      	GOTO       L_main14
;YM3812.c,158 :: 		if(press[j] == 0) {
0x04C8	0x083F      	MOVF       main_j_L0, 0
0x04C9	0x3E43      	ADDLW      main_press_L0
0x04CA	0x0084      	MOVWF      FSR
0x04CB	0x0800      	MOVF       INDF, 0
0x04CC	0x3A00      	XORLW      0
0x04CD	0x1D03      	BTFSS      STATUS, 2
0x04CE	0x2CD9      	GOTO       L_main16
;YM3812.c,159 :: 		Mute(&channel[j]);
0x04CF	0x300B      	MOVLW      11
0x04D0	0x00F0      	MOVWF      R0
0x04D1	0x083F      	MOVF       main_j_L0, 0
0x04D2	0x00F4      	MOVWF      R4
0x04D3	0x20E1      	CALL       _Mul_8X8_U
0x04D4	0x0870      	MOVF       R0, 0
0x04D5	0x3E22      	ADDLW      main_channel_L0
0x04D6	0x00C6      	MOVWF      FARG_Mute_channel
0x04D7	0x220B      	CALL       _Mute
;YM3812.c,160 :: 		}
0x04D8	0x2CE4      	GOTO       L_main17
L_main16:
;YM3812.c,162 :: 		press[j] -=1;
0x04D9	0x083F      	MOVF       main_j_L0, 0
0x04DA	0x3E43      	ADDLW      main_press_L0
0x04DB	0x00F1      	MOVWF      R1
0x04DC	0x0871      	MOVF       R1, 0
0x04DD	0x0084      	MOVWF      FSR
0x04DE	0x0300      	DECF       INDF, 0
0x04DF	0x00F0      	MOVWF      R0
0x04E0	0x0871      	MOVF       R1, 0
0x04E1	0x0084      	MOVWF      FSR
0x04E2	0x0870      	MOVF       R0, 0
0x04E3	0x0080      	MOVWF      INDF
;YM3812.c,163 :: 		}
L_main17:
;YM3812.c,157 :: 		for(j = 0; j < NB_CHANNEL; ++j) {
0x04E4	0x0ABF      	INCF       main_j_L0, 1
;YM3812.c,164 :: 		}
0x04E5	0x2CC4      	GOTO       L_main13
L_main14:
;YM3812.c,167 :: 		nextEvent -= 1;
0x04E6	0x03C5      	DECF       main_nextEvent_L0, 1
;YM3812.c,170 :: 		delay_ms(150);
0x04E7	0x3002      	MOVLW      2
0x04E8	0x00FB      	MOVWF      R11
0x04E9	0x3086      	MOVLW      134
0x04EA	0x00FC      	MOVWF      R12
0x04EB	0x3099      	MOVLW      153
0x04EC	0x00FD      	MOVWF      R13
L_main18:
0x04ED	0x0BFD      	DECFSZ     R13, 1
0x04EE	0x2CED      	GOTO       L_main18
0x04EF	0x0BFC      	DECFSZ     R12, 1
0x04F0	0x2CED      	GOTO       L_main18
0x04F1	0x0BFB      	DECFSZ     R11, 1
0x04F2	0x2CED      	GOTO       L_main18
;YM3812.c,171 :: 		} while(isPlaying);
0x04F3	0x0842      	MOVF       main_isPlaying_L0, 0
0x04F4	0x1D03      	BTFSS      STATUS, 2
0x04F5	0x2C0B      	GOTO       L_main6
;YM3812.c,174 :: 		for(j = 0; j < NB_CHANNEL; ++j) {
0x04F6	0x01BF      	CLRF       main_j_L0
L_main19:
0x04F7	0x3002      	MOVLW      2
0x04F8	0x023F      	SUBWF      main_j_L0, 0
0x04F9	0x1803      	BTFSC      STATUS, 0
0x04FA	0x2D06      	GOTO       L_main20
;YM3812.c,175 :: 		Mute(&channel[j]);
0x04FB	0x300B      	MOVLW      11
0x04FC	0x00F0      	MOVWF      R0
0x04FD	0x083F      	MOVF       main_j_L0, 0
0x04FE	0x00F4      	MOVWF      R4
0x04FF	0x20E1      	CALL       _Mul_8X8_U
0x0500	0x0870      	MOVF       R0, 0
0x0501	0x3E22      	ADDLW      main_channel_L0
0x0502	0x00C6      	MOVWF      FARG_Mute_channel
0x0503	0x220B      	CALL       _Mute
;YM3812.c,174 :: 		for(j = 0; j < NB_CHANNEL; ++j) {
0x0504	0x0ABF      	INCF       main_j_L0, 1
;YM3812.c,176 :: 		}
0x0505	0x2CF7      	GOTO       L_main19
L_main20:
;YM3812.c,177 :: 		}
0x0506	0x2C07      	GOTO       L_main4
;YM3812.c,178 :: 		}
L_end_main:
0x0507	0x2D07      	GOTO       $+0
; end of _main
;YM3812.c,8 :: _tune
0x0508	0x3401 ;_tune+0
0x0509	0x3403 ;_tune+1
0x050A	0x3406 ;_tune+2
0x050B	0x3401 ;_tune+3
0x050C	0x3403 ;_tune+4
0x050D	0x3401 ;_tune+5
0x050E	0x3402 ;_tune+6
0x050F	0x3406 ;_tune+7
0x0510	0x3401 ;_tune+8
0x0511	0x3403 ;_tune+9
0x0512	0x3401 ;_tune+10
0x0513	0x3403 ;_tune+11
0x0514	0x3406 ;_tune+12
0x0515	0x3401 ;_tune+13
0x0516	0x3403 ;_tune+14
0x0517	0x3401 ;_tune+15
0x0518	0x3402 ;_tune+16
0x0519	0x3406 ;_tune+17
0x051A	0x3401 ;_tune+18
0x051B	0x3403 ;_tune+19
0x051C	0x3401 ;_tune+20
0x051D	0x3403 ;_tune+21
0x051E	0x3406 ;_tune+22
0x051F	0x3401 ;_tune+23
0x0520	0x3403 ;_tune+24
0x0521	0x3401 ;_tune+25
0x0522	0x340A ;_tune+26
0x0523	0x3405 ;_tune+27
0x0524	0x3401 ;_tune+28
0x0525	0x3403 ;_tune+29
0x0526	0x3401 ;_tune+30
0x0527	0x3401 ;_tune+31
0x0528	0x3406 ;_tune+32
0x0529	0x3401 ;_tune+33
0x052A	0x3403 ;_tune+34
0x052B	0x3401 ;_tune+35
0x052C	0x340B ;_tune+36
0x052D	0x3405 ;_tune+37
0x052E	0x3401 ;_tune+38
0x052F	0x3403 ;_tune+39
0x0530	0x3401 ;_tune+40
0x0531	0x3408 ;_tune+41
0x0532	0x3405 ;_tune+42
0x0533	0x3405 ;_tune+43
0x0534	0x3400 ;_tune+44
0x0535	0x3402 ;_tune+45
0x0536	0x3408 ;_tune+46
0x0537	0x3403 ;_tune+47
0x0538	0x3401 ;_tune+48
0x0539	0x3403 ;_tune+49
0x053A	0x3402 ;_tune+50
0x053B	0x3403 ;_tune+51
0x053C	0x3404 ;_tune+52
0x053D	0x3401 ;_tune+53
0x053E	0x3403 ;_tune+54
0x053F	0x3402 ;_tune+55
0x0540	0x3408 ;_tune+56
0x0541	0x3404 ;_tune+57
0x0542	0x3401 ;_tune+58
0x0543	0x3403 ;_tune+59
0x0544	0x3401 ;_tune+60
0x0545	0x340B ;_tune+61
0x0546	0x3404 ;_tune+62
0x0547	0x3401 ;_tune+63
0x0548	0x3403 ;_tune+64
0x0549	0x3401 ;_tune+65
0x054A	0x3403 ;_tune+66
0x054B	0x3405 ;_tune+67
0x054C	0x3401 ;_tune+68
0x054D	0x3403 ;_tune+69
0x054E	0x3401 ;_tune+70
0x054F	0x3408 ;_tune+71
0x0550	0x3405 ;_tune+72
0x0551	0x3401 ;_tune+73
0x0552	0x3403 ;_tune+74
0x0553	0x3401 ;_tune+75
0x0554	0x340A ;_tune+76
0x0555	0x3405 ;_tune+77
0x0556	0x3405 ;_tune+78
0x0557	0x3400 ;_tune+79
0x0558	0x3402 ;_tune+80
0x0559	0x3403 ;_tune+81
0x055A	0x3403 ;_tune+82
0x055B	0x3401 ;_tune+83
0x055C	0x3403 ;_tune+84
0x055D	0x3402 ;_tune+85
0x055E	0x3403 ;_tune+86
0x055F	0x3404 ;_tune+87
0x0560	0x3401 ;_tune+88
0x0561	0x3403 ;_tune+89
0x0562	0x3402 ;_tune+90
0x0563	0x3407 ;_tune+91
0x0564	0x3404 ;_tune+92
0x0565	0x3401 ;_tune+93
0x0566	0x3403 ;_tune+94
0x0567	0x3401 ;_tune+95
0x0568	0x3403 ;_tune+96
0x0569	0x3405 ;_tune+97
0x056A	0x3401 ;_tune+98
0x056B	0x3403 ;_tune+99
0x056C	0x3401 ;_tune+100
0x056D	0x3407 ;_tune+101
0x056E	0x3405 ;_tune+102
0x056F	0x3401 ;_tune+103
0x0570	0x3403 ;_tune+104
0x0571	0x3401 ;_tune+105
0x0572	0x340A ;_tune+106
0x0573	0x3405 ;_tune+107
0x0574	0x3401 ;_tune+108
0x0575	0x3403 ;_tune+109
0x0576	0x3401 ;_tune+110
0x0577	0x340B ;_tune+111
0x0578	0x3405 ;_tune+112
0x0579	0x3401 ;_tune+113
0x057A	0x3403 ;_tune+114
0x057B	0x34FF ;_tune+115
0x057C	0x3400 ;_tune+116
0x057D	0x3400 ;_tune+117
0x057E	0x3400 ;_tune+118
0x057F	0x3400 ;_tune+119
; end of _tune
;lib_ym3812.c,4 :: _YM3812_channelOffset
0x0580	0x3400 ;_YM3812_channelOffset+0
0x0581	0x3401 ;_YM3812_channelOffset+1
0x0582	0x3402 ;_YM3812_channelOffset+2
0x0583	0x3408 ;_YM3812_channelOffset+3
0x0584	0x3409 ;_YM3812_channelOffset+4
0x0585	0x340A ;_YM3812_channelOffset+5
0x0586	0x3410 ;_YM3812_channelOffset+6
0x0587	0x3411 ;_YM3812_channelOffset+7
0x0588	0x3412 ;_YM3812_channelOffset+8
; end of _YM3812_channelOffset
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [12]    _YM3812_WriteData
0x000F      [12]    _YM3812_WriteAddess
0x001B       [7]    _____DoICP
0x0022      [25]    _YM3812_SetRegister
0x003B      [34]    _YM3812_SetOperatorRegister
0x005D      [52]    _Init
0x0091      [37]    _SetVolume
0x00B6      [43]    _Mul_16X16_U
0x00E1      [25]    _Mul_8X8_U
0x00FA      [37]    _SetRelease
0x011F       [9]    _YM3812_Init
0x0128      [16]    _YM3812_Reset
0x0138      [37]    _SetDecay
0x015D      [47]    _SetAttack
0x018C      [33]    _SetFeedback
0x01AD      [12]    ___CC2DW
0x01B9      [47]    _SetSustain
0x01E8      [35]    _SetBlock
0x020B      [27]    _Mute
0x0226      [38]    _SetFrequency
0x024C      [35]    _SetMultiplier
0x026F     [162]    _YM3812_GetNote
0x0311      [28]    _Play
0x032D     [475]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x000A       [1]    PCLATH
0x0020       [2]    ___DoICPAddr
0x0022      [22]    main_channel_L0
0x0038       [5]    main_tuneBuffer_L0
0x003D       [1]    main_tuneReader_L0
0x003E       [1]    main_i_L0
0x003F       [1]    main_j_L0
0x0040       [1]    main_upper_L0
0x0041       [1]    main_lower_L0
0x0042       [1]    main_isPlaying_L0
0x0043       [2]    main_press_L0
0x0045       [1]    main_nextEvent_L0
0x0046       [1]    FARG_SetRelease_channel
0x0046       [1]    FARG_SetMultiplier_channel
0x0046       [1]    FARG_Mute_channel
0x0046       [1]    FARG_SetFeedback_channel
0x0046       [1]    FARG_Init_channel
0x0046       [1]    FARG_YM3812_GetNote_n
0x0046       [1]    FARG_SetDecay_channel
0x0046       [1]    FARG_SetBlock_channel
0x0046       [1]    FARG_Play_channel
0x0046       [1]    FARG_SetAttack_channel
0x0046       [1]    FARG_SetFrequency_channel
0x0046       [1]    FARG_SetSustain_channel
0x0046       [1]    FARG_SetVolume_channel
0x0047       [1]    FARG_SetMultiplier_o
0x0047       [1]    FARG_SetFrequency_upper
0x0047       [1]    FARG_YM3812_GetNote_upper
0x0047       [1]    FARG_SetAttack_o
0x0047       [1]    FARG_SetBlock_d
0x0047       [1]    FARG_SetDecay_o
0x0047       [1]    FARG_SetSustain_o
0x0047       [1]    FARG_SetFeedback_d
0x0047       [1]    FARG_SetVolume_o
0x0047       [1]    FARG_SetRelease_o
0x0048       [1]    FARG_SetVolume_d
0x0048       [1]    FARG_SetFrequency_lower
0x0048       [1]    FARG_YM3812_GetNote_lower
0x0048       [1]    FARG_SetDecay_d
0x0048       [1]    FARG_SetSustain_d
0x0048       [1]    FARG_SetMultiplier_d
0x0048       [1]    FARG_SetRelease_d
0x0048       [1]    FARG_SetAttack_d
0x0049       [1]    FARG_YM3812_SetOperatorRegister_reg
0x0049       [1]    FARG_YM3812_SetRegister_reg
0x004A       [1]    FARG_YM3812_SetOperatorRegister_dt
0x004A       [1]    FARG_YM3812_SetRegister_dt
0x004B       [1]    FARG_YM3812_SetOperatorRegister_ch
0x004B       [1]    FARG_YM3812_SetRegister_ch
0x004C       [1]    FARG_YM3812_SetOperatorRegister_op
0x004D       [1]    ?FLOC___YM3812_SetOperatorRegisterT10
0x004E       [1]    FARG_YM3812_WriteData_dt
0x004E       [1]    FARG_YM3812_WriteAddess_addr
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x0188       [1]    ANSEL
0x0189       [1]    ANSELH
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0508     [120]    _tune
0x0580       [9]    _YM3812_channelOffset
